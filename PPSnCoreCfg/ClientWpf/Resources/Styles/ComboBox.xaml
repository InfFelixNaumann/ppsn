<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:ui="clr-namespace:TecWare.PPSn.UI;assembly=PPSn.Desktop.UI"
					xmlns:uiC="clr-namespace:TecWare.PPSn.Controls;assembly=PPSn.Desktop.UI" >

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<ui:LuaValueConverter x:Key="CollapseInaktiveConverter">
		<![CDATA[
		if value ~= nil and value then
			return true;
		else
			return false;
		end;
		]]>
	</ui:LuaValueConverter>

	<ui:LuaValueConverter x:Key="SelectedIndexConverter">
		<![CDATA[
		if value >= 0 then
			return true;
		else
			return false;
		end;
		]]>
	</ui:LuaValueConverter>

	<PathGeometry x:Key="arrowPathGeometry"
					  Figures="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" />
	<PathGeometry x:Key="clearPathGeometry"
					  Figures="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />
	<PathGeometry x:Key="filterPathGeometry"
					  Figures="M3,2H21V2H21V4H20.92L15,9.92V22.91L9,16.91V9.91L3.09,4H3V2M11,16.08L13,18.08V9H13.09L18.09,4H5.92L10.92,9H11V16.08Z" />

	<ControlTemplate x:Key="PPSnComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border x:Name="border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}"	BorderThickness="{TemplateBinding BorderThickness}"	Background="{TemplateBinding Background}" />
			<Viewbox x:Name="arrowBox" Grid.Column="1" Opacity=".65">
				<Canvas Width="24" Height="24">
					<Path Data="{StaticResource arrowPathGeometry}" Fill="{StaticResource PPSnWindowForegroundBrush}"/>
				</Canvas>
			</Viewbox>
		</Grid>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True">
				<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
				<Setter Property="Opacity" TargetName="arrowBox" Value="1.0"/>
			</DataTrigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" TargetName="arrowBox" Value=".25"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="PPSnComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border Name="border" Background="Transparent" SnapsToDevicePixels="True" Padding="4,0" Height="33">
						<ContentPresenter VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="True">
							<Setter Property="Panel.Background" TargetName="border" Value="{StaticResource PPSnMouseOverBrush}"/>
						</Trigger>
						<!--<DataTrigger Binding="{Binding Path=IsActive, Converter={StaticResource CollapseInaktiveConverter}, Mode=OneWay}">
							<DataTrigger.Value>
								<sys:Boolean>false</sys:Boolean>
							</DataTrigger.Value>
							<Setter Property="Panel.Visibility" TargetName="border" Value="Collapsed"/>
						</DataTrigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PPSnComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="Height" Value="23"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="TextElement.Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource PPSnComboBoxItemStyle}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource PPSnControlNormalBorderBrush}" />
		<Setter Property="Background" Value="{StaticResource PPSnControlBackgroundBrush}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton x:Name="PART_ToggleButton" ClickMode="Press" Focusable="False"
									  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									  Template="{StaticResource PPSnComboBoxToggleButtonTemplate}" Background="{TemplateBinding Background}"
									  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
						<ContentPresenter x:Name="PART_ContentSite" Margin="5,3,23,3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center"                              
										  Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
										  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
										  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
						<Button x:Name="clearButton" HorizontalAlignment="Right" Width="20" Margin="0,1,20,1" Focusable="False" Visibility="Hidden">
							<Button.Template>
								<ControlTemplate TargetType="{x:Type Button}">
									<Border Background="Transparent">
										<Viewbox x:Name="clearBox" Opacity=".65">
											<Canvas Width="24" Height="24">
												<Path Data="{StaticResource clearPathGeometry}" Fill="Black"/>
											</Canvas>
										</Viewbox>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter TargetName="clearBox" Property="Opacity" Value="1"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Button.Template>
							<Button.Triggers>
								<EventTrigger RoutedEvent="Button.Click">
									<EventTrigger.Actions>
										<BeginStoryboard>
											<Storyboard>
												<ObjectAnimationUsingKeyFrames
														Storyboard.Target="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
														Storyboard.TargetProperty="(ComboBox.SelectedItem)">
													<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</BeginStoryboard>
									</EventTrigger.Actions>
								</EventTrigger>
							</Button.Triggers>
						</Button>
						<TextBox Name="PART_EditableTextBox" Margin="5,3,23,3" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" >
							<TextBox.Template>
								<ControlTemplate TargetType="{x:Type TextBox}" >
									<Border x:Name="PART_ContentHost" Focusable="False" />
								</ControlTemplate>
							</TextBox.Template>
						</TextBox>
						<Popup Name="PART_Popup" Placement="Bottom" VerticalOffset="1" Focusable="False" AllowsTransparency="True" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
							<Grid Name="PART_DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border Name="PART_DropDownBorder" Background="{StaticResource PPSnControlBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource PPSnControlFocusedBorderBrush}">
									<ScrollViewer SnapsToDevicePixels="True" Style="{DynamicResource PPSnScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
										<VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="ItemsControl.HasItems" Value="False">
							<Setter Property="FrameworkElement.MinHeight" TargetName="PART_DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{StaticResource PPSnWindowDisabledForegroundBrush}"/>
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
							<Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
							<Setter Property="Visibility" TargetName="PART_ContentSite" Value="Hidden"/>
						</Trigger>

						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=(uiC:PPSnComboBoxBehavior.IsNullable), RelativeSource={RelativeSource Self}, Mode=OneWay}">
									<Condition.Value>
										<sys:Boolean>True</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Binding="{Binding Path=(Selector.SelectedIndex), RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource SelectedIndexConverter}}">
									<Condition.Value>
										<sys:Boolean>True</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Binding="{Binding Path=(ComboBox.IsEditable), RelativeSource={RelativeSource Self}, Mode=OneWay}">
									<Condition.Value>
										<sys:Boolean>False</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay}">
									<Condition.Value>
										<sys:Boolean>True</sys:Boolean>
									</Condition.Value>
								</Condition>
								<Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}">
									<Condition.Value>
										<sys:Boolean>True</sys:Boolean>
									</Condition.Value>
								</Condition>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="PART_ContentSite" Property="Margin" Value="5,3,43,3"/>
							<Setter TargetName="clearButton" Property="Visibility" Value="Visible"/>
						</MultiDataTrigger>
						<Trigger Property="ComboBox.IsDropDownOpen" Value="True">
							<Setter TargetName="clearButton" Property="IsHitTestVisible" Value="False"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource PPSnComboBoxStyle}" />

	<ControlTemplate x:Key="PPSnFilterComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition Width="32" />
				<ColumnDefinition Width="32" />
			</Grid.ColumnDefinitions>
			<Border x:Name="border" Grid.ColumnSpan="3" BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
			<TextBlock x:Name="emptyText" Grid.Column="0" Margin="6,3" VerticalAlignment="Center" Visibility="Hidden" Foreground="{StaticResource PPSnWindowForegroundBrush}"
					   Text="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Mode=OneTime}"/>
			<Button x:Name="clearButton" Grid.Column="1" Margin="0,1" Focusable="False"
					Command="{Binding Path=(uiC:PPSnSelectionChangedBehavior.Command), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}, Mode=OneWay}">
				<Button.Template>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="Transparent">
							<Viewbox x:Name="clearBox" Margin="3" Opacity=".65">
								<Canvas Width="24" Height="24">
									<Path Data="{StaticResource clearPathGeometry}" Fill="{StaticResource PPSnWindowForegroundBrush}"/>
								</Canvas>
							</Viewbox>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="clearBox" Property="Opacity" Value="1"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Button.Template>
			</Button>
			<Viewbox Grid.Column="2" Margin="7" Opacity=".65" >
				<Canvas Width="24" Height="24">
					<Path Data="{StaticResource filterPathGeometry}" Fill="{StaticResource PPSnWindowForegroundBrush}"/>
				</Canvas>
			</Viewbox>
		</Grid>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=SelectedIndex, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Mode=OneWay, Converter={StaticResource SelectedIndexConverter}}">
				<DataTrigger.Value>
					<sys:Boolean>False</sys:Boolean>
				</DataTrigger.Value>
				<Setter TargetName="clearButton" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="emptyText" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}, Mode=OneWay}">
				<DataTrigger.Value>
					<sys:Boolean>True</sys:Boolean>
				</DataTrigger.Value>
				<Setter TargetName="clearButton" Property="IsHitTestVisible" Value="False"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True">
				<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
				<Setter Property="BorderThickness" TargetName="border" Value="1"/>
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="PPSnFilterComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource PPSnComboBoxItemStyle}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource PPSnControlNormalBorderBrush}" />
		<Setter Property="Background" Value="{StaticResource PPSnControlBackgroundBrush}"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton x:Name="PART_ToggleButton" ClickMode="Press" Focusable="False"
									  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
									  Template="{StaticResource PPSnFilterComboBoxToggleButtonTemplate}" Background="{TemplateBinding Background}"
									  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
						<ContentPresenter x:Name="PART_ContentSite" Margin="6,3,64,3" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center"
										  Content="{TemplateBinding ComboBox.SelectionBoxItem}"
										  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
										  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
						<Popup Name="PART_Popup" Placement="Bottom" VerticalOffset="1" Focusable="False" AllowsTransparency="True"
							   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" PopupAnimation="Slide">
							<Grid Name="PART_DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
								  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border Name="PART_DropDownBorder" Background="{StaticResource PPSnControlBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource PPSnControlFocusedBorderBrush}">
									<ScrollViewer SnapsToDevicePixels="True" Style="{DynamicResource PPSnScrollViewerStyle}" VerticalScrollBarVisibility="Auto">
										<VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>