<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<SolidColorBrush x:Key="PPSnButtonStyleBackgroundBrush" Color="{StaticResource PPSnAccentColor}" Opacity="0.15"/>

	<Style x:Key="PPSnSelectionToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,4" />
		<Setter Property="BorderBrush" Value="{StaticResource PPSnSeparatorBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,2,2"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PPSnMarkerBrush}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="{StaticResource PPSnMouseOverBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PPSnButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
		<Setter Property="Background" Value="{StaticResource PPSnButtonStyleBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource PPSnButtonStyleBackgroundBrush}"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
							CornerRadius="0" SnapsToDevicePixels="true">
						<ContentPresenter x:Name="PART_ContentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PPSnWindowForegroundBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PPSnWindowForegroundBrush}"/>
							<Setter Property="Background" TargetName="border" Value="{StaticResource PPSnButtonPressedBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="Foreground" Value="{StaticResource PPSnWindowDisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Button}" BasedOn="{StaticResource PPSnButtonStyle}" />

	<Style x:Key="PPSnShrinkButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <Path Width="21" Height="12" SnapsToDevicePixels="True" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{TemplateBinding Foreground}"
							  StrokeThickness="1" Stretch="None" RenderOptions.EdgeMode="Aliased"
							  Data="M0,1 L20,1 M0,6 L20,6 M0,11 L20,11">
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource PPSnMouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="PPSnCircleButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Opacity" Value=".85"/>
		<Setter Property="Width" Value="36"/>
		<Setter Property="Height" Value="36"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Background="Transparent">
						<Ellipse x:Name="circle" Fill="Transparent" StrokeThickness="1.5" Stroke="{StaticResource PPSnActionButtonBrush}"/>
						<Image x:Name="image" Source="{TemplateBinding Content}" Margin="8"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" Value="1"/>
							<Setter TargetName="circle" Property="Fill" Value="{StaticResource PPSnMouseOverBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" Value="1"/>
							<Setter TargetName="circle" Property="Fill" Value="{StaticResource PPSnButtonPressedBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.35"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PPSnImageButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" Background="Transparent" Padding="8">
						<Path x:Name="imagePath" Data="{TemplateBinding Content}" Fill="{StaticResource PPSnActionButtonBrush}" Opacity=".75"
							  HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform">
							<Path.RenderTransformOrigin>
								<Point X="0.5" Y="0.5"/>
							</Path.RenderTransformOrigin>
							<Path.RenderTransform>
								<ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<!--<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="imagePath" Value="{StaticResource PPSnWindowForegroundBrush}"/>
						</Trigger>-->
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="imagePath" Value="1"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.25"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX" From="1" To="0.9" Duration="0:00:0.1"/>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleY" From="1" To="0.9" Duration="0:00:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX" From="0.9" To="1" Duration="0:00:0.05"/>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleY" From="0.9" To="1" Duration="0:00:0.05"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--<Style x:Key="PPSnImageButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" Background="Transparent">
						<Image x:Name="image" Source="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8">
							<Image.RenderTransformOrigin>
								<Point X="0.5" Y="0.5"/>
							</Image.RenderTransformOrigin>
							<Image.RenderTransform>
								<ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
							</Image.RenderTransform>
						</Image>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(Image.Source).(DrawingImage.Drawing).(GeometryDrawing.Brush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PPSnWindowForegroundBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="(Image.Source).(DrawingImage.Drawing).(GeometryDrawing.Brush)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PPSnImageBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX" From="1" To="0.9" Duration="0:00:0.1"/>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleY" From="1" To="0.9" Duration="0:00:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX" From="0.9" To="1" Duration="0:00:0.05"/>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleY" From="0.9" To="1" Duration="0:00:0.05"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.25"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>-->

</ResourceDictionary>