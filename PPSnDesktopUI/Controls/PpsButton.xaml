<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 					xmlns:pps="clr-namespace:TecWare.PPSn.Controls">

	<SolidColorBrush x:Key="PpsButtonBackgroundBrush" Color="{DynamicResource PPSnAccentColor}" Opacity="0.12"/>

	<Style TargetType="{x:Type pps:PpsButton}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}"/>
		<Setter Property="Background" Value="{StaticResource PpsButtonBackgroundBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource PpsButtonBackgroundBrush}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="6,0"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="GeometrySize" Value="18" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsButton}">
					<Border>
						<Border x:Name="InnerBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Background="{TemplateBinding Background}"
								Margin="0,0,0,0"
								Padding="2,0,2,0"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition x:Name="ImageColumn" Width="Auto" />
									<ColumnDefinition x:Name="ContentColumn" />
								</Grid.ColumnDefinitions>
								<pps:PpsGeometryImage x:Name="ImageBox"
													  GeometryName="{TemplateBinding GeometryName}"
													  GeometryCircled="false"
													  Width="{TemplateBinding GeometrySize}"
													  Height="{TemplateBinding GeometrySize}"
													  Foreground="{DynamicResource PPSnActionButtonBrush}"
													  Opacity=".65" />
								<ContentPresenter x:Name="ContentSite"
												  Grid.Column="1"
												  Focusable="False"
												  RecognizesAccessKey="True"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  Margin="{TemplateBinding Padding}"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
									<ContentPresenter.Resources>
										<Style TargetType="{x:Type TextBlock}">
											<Setter Property="TextWrapping" Value="NoWrap"/>
											<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
										</Style>
									</ContentPresenter.Resources>
								</ContentPresenter>
								<Grid.RenderTransformOrigin>
									<Point X="0.5" Y="0.5"/>
								</Grid.RenderTransformOrigin>
								<Grid.RenderTransform>
									<ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
								</Grid.RenderTransform>
							</Grid>
						</Border>
					</Border>

					<ControlTemplate.Triggers>
						<!--Triggers for standard buttton-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasContent" Value="True"/>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsMouseCaptured" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PPSnControlFocusedBorderBrush}"/>
							<Setter TargetName="ImageBox" Property="Opacity" Value="1"/>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasContent" Value="True"/>
								<Condition Property="IsKeyboardFocused" Value="True"/>
								<Condition Property="IsMouseCaptured" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PPSnControlFocusedBorderBrush}"/>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasContent" Value="True"/>
								<Condition Property="IsMouseCaptured" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PPSnButtonPressedBrush}"/>
							<Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource PPSnButtonPressedBrush}"/>
							<Setter TargetName="ImageBox" Property="Opacity" Value="1"/>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasContent" Value="True"/>
								<Condition Property="IsPressed" Value="True"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
																		  Storyboard.TargetProperty="Margin"
																		  AccelerationRatio=".4"
																		  Duration="0:0:0.15">
											<SplineThicknessKeyFrame Value="2,1,2,1" />
										</ThicknessAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
																		  Storyboard.TargetProperty="Padding"
																		  AccelerationRatio=".4"
																		  Duration="0:0:0.15">
											<SplineThicknessKeyFrame Value="0,0,0,0" />
										</ThicknessAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="scaleTransform"
														 Storyboard.TargetProperty="ScaleX"
														 To="0.98"
														 AccelerationRatio=".4"
														 Duration="0:0:0.15"/>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
																		  Storyboard.TargetProperty="Margin"
																		  Duration="0:0:0.2"
																		  AccelerationRatio=".4">
											<SplineThicknessKeyFrame Value="0,0,0,0" />
										</ThicknessAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
																		  Storyboard.TargetProperty="Padding"
																		  Duration="0:0:0.2"
																		  AccelerationRatio=".4">
											<SplineThicknessKeyFrame Value="2,0,2,0" />
										</ThicknessAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="scaleTransform"
														 Storyboard.TargetProperty="ScaleX"
														 To="1.0"
														 AccelerationRatio=".4"
														 Duration="0:0:0.2"/>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>

						<!--Triggers for image only button-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasContent" Value="False"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="ImageBox" Property="Opacity" Value="1"/>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasContent" Value="False"/>
								<Condition Property="IsPressed" Value="True"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX" From="1" To="0.9" Duration="0:00:0.1"/>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleY" From="1" To="0.9" Duration="0:00:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX" From="0.9" To="1" Duration="0:00:0.15"/>
										<DoubleAnimation Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleY" From="0.9" To="1" Duration="0:00:0.15"/>
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>

						<!--Triggers for both styles-->
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="Foreground" Value="{DynamicResource PPSnWindowDisabledForegroundBrush}"/>
							<Setter TargetName="ImageBox" Property="Opacity" Value=".3"/>
						</Trigger>

						<Trigger SourceName="ImageBox" Property="HasGeometry" Value="false">
							<Setter TargetName="ImageBox" Property="Visibility" Value="Collapsed" />
						</Trigger>

						<Trigger Property="HasContent" Value="False">
							<Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="ContentColumn" Property="Width" Value="0" />
							<Setter TargetName="ImageColumn" Property="Width" Value="*" />
							<Setter TargetName="ImageBox" Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type pps:PpsSplitButton}" BasedOn="{StaticResource {x:Type pps:PpsButton}}" />

</ResourceDictionary>