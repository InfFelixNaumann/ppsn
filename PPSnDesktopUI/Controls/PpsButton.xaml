<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 					xmlns:pps="clr-namespace:TecWare.PPSn.Controls">

	<SolidColorBrush x:Key="PpsButtonBackgroundBrush" Color="{DynamicResource PPSnAccentColor}" Opacity="0.11"/>

	<Style TargetType="{x:Type pps:PpsButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="{StaticResource PpsButtonBackgroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="3,0,6,0" />
		<Setter Property="GeometrySize" Value="18" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsButton}">
					<Border>
						<Border x:Name="InnerBorder"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<pps:PpsGeometryImage x:Name="ImageBox"
													  GeometryName="{TemplateBinding GeometryName}"
													  GeometryCircled="false"
													  Grid.ColumnSpan="2"
													  Width="{TemplateBinding GeometrySize}"
													  Height="{TemplateBinding GeometrySize}"
													  Fill="{TemplateBinding Fill}"
													  Foreground="{TemplateBinding Foreground}"
													  Opacity="{TemplateBinding ImageOpacity}">
									<pps:PpsGeometryImage.RenderTransformOrigin>
										<Point X="0.5" Y="0.5"/>
									</pps:PpsGeometryImage.RenderTransformOrigin>
									<pps:PpsGeometryImage.RenderTransform>
										<ScaleTransform x:Name="ImageScaleTransform" ScaleX="1" ScaleY="1" />
									</pps:PpsGeometryImage.RenderTransform>
								</pps:PpsGeometryImage>
								<ContentPresenter x:Name="ContentSite"
												  Grid.Column="1"
												  Focusable="False"
												  RecognizesAccessKey="True"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  Margin="{TemplateBinding Padding}"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<Grid.RenderTransformOrigin>
									<Point X="0.5" Y="0.5" />
								</Grid.RenderTransformOrigin>
								<Grid.RenderTransform>
									<ScaleTransform x:Name="GridScaleTransform" ScaleX="1" ScaleY="1" />
								</Grid.RenderTransform>
							</Grid>
						</Border>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="DisplayMode" Value="Rectangle">
							<Setter TargetName="InnerBorder" Property="Padding" Value="2,0,2,0" />
							<Setter TargetName="ImageBox" Property="Grid.ColumnSpan" Value="1" />
							<Setter TargetName="ImageBox" Property="Margin" Value="3,0,0,0" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Rectangle" />
								<Condition Property="IsTransparentRectangle" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Focusable" Value="True" />
							<Setter Property="BorderThickness" Value="1" />
							<Setter Property="Background" Value="{StaticResource PpsButtonBackgroundBrush}" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Rectangle" />
								<Condition Property="IsTransparentRectangle" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" Value="Transparent" />
						</MultiTrigger>

						<Trigger Property="DisplayMode" Value="Circle">
							<Setter Property="Foreground" Value="{DynamicResource PPSnActionButtonBrush}"/>
							<Setter Property="GeometrySize" Value="36" />
							<Setter Property="Padding" Value="0" />
							<Setter TargetName="ImageBox" Property="GeometryCircled" Value="True" />
							<Setter TargetName="ContentSite" Property="Grid.Row" Value="1" />
							<Setter TargetName="ContentSite" Property="Grid.ColumnSpan" Value="2" />
						</Trigger>

						<Trigger Property="HasContent" Value="False">
							<Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="ImageBox" Property="Margin" Value="0,0,0,0" />
							<Setter TargetName="ImageBox" Property="Grid.ColumnSpan" Value="2" />
						</Trigger>

						<Trigger SourceName="ImageBox" Property="HasGeometry" Value="False">
							<Setter TargetName="ImageBox" Property="Visibility" Value="Collapsed" />
							<Setter Property="Padding" Value="6,0" />
						</Trigger>

						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="Transparent" />
							<Setter Property="Opacity" Value="0.35" />
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Rectangle" />
								<Condition Property="IsKeyboardFocused" Value="True" />
								<Condition Property="IsMouseCaptured" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PPSnControlFocusedBorderBrush}" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Rectangle" />
								<Condition Property="IsTransparentRectangle" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsMouseCaptured" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="ImageOpacity" Value="1" />
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PPSnControlFocusedBorderBrush}" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Rectangle" />
								<Condition Property="IsTransparentRectangle" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="ImageOpacity" Value="1" />
							<Setter Property="Background" Value="{DynamicResource PPSnMouseOverBrush}" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Rectangle" />
								<Condition Property="IsMouseCaptured" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="ImageOpacity" Value="1" />
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PPSnButtonPressedBrush}" />
							<Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource PPSnButtonPressedBrush}" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Rectangle" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
																		  Storyboard.TargetProperty="Margin"
																		  AccelerationRatio=".4"
																		  Duration="0:0:0.15">
											<SplineThicknessKeyFrame Value="2,1,2,1" />
										</ThicknessAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
																		  Storyboard.TargetProperty="Padding"
																		  AccelerationRatio=".4"
																		  Duration="0:0:0.15">
											<SplineThicknessKeyFrame Value="0,0,0,0" />
										</ThicknessAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="GridScaleTransform"
														 Storyboard.TargetProperty="ScaleX"
														 To="0.975"
														 AccelerationRatio=".4"
														 Duration="0:0:0.15" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
																		  Storyboard.TargetProperty="Margin"
																		  Duration="0:0:0.2"
																		  AccelerationRatio=".4">
											<SplineThicknessKeyFrame Value="0,0,0,0" />
										</ThicknessAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
																		  Storyboard.TargetProperty="Padding"
																		  Duration="0:0:0.2"
																		  AccelerationRatio=".4">
											<SplineThicknessKeyFrame Value="2,0,2,0" />
										</ThicknessAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="GridScaleTransform"
														 Storyboard.TargetProperty="ScaleX"
														 To="1"
														 AccelerationRatio=".4"
														 Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Circle" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="ImageOpacity" Value="1" />
							<Setter TargetName="ImageBox" Property="Fill" Value="{DynamicResource PPSnMouseOverBrush}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Circle" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="ImageBox" Property="Fill" Value="{DynamicResource PPSnButtonPressedBrush}" />
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ImageScaleTransform" Storyboard.TargetProperty="ScaleX" To="0.95" Duration="0:00:0.1" />
										<DoubleAnimation Storyboard.TargetName="ImageScaleTransform" Storyboard.TargetProperty="ScaleY" To="0.95" Duration="0:00:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ImageScaleTransform" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:00:0.15" />
										<DoubleAnimation Storyboard.TargetName="ImageScaleTransform" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:00:0.15" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Image" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="ImageOpacity" Value="1" />
							<Setter Property="Background" Value="{DynamicResource PPSnMouseOverBrush}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="DisplayMode" Value="Image" />
								<Condition Property="IsPressed" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource PPSnButtonPressedBrush}" />
							<MultiTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ImageScaleTransform" Storyboard.TargetProperty="ScaleX" To="0.9" Duration="0:00:0.1" />
										<DoubleAnimation Storyboard.TargetName="ImageScaleTransform" Storyboard.TargetProperty="ScaleY" To="0.9" Duration="0:00:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ImageScaleTransform" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:00:0.15" />
										<DoubleAnimation Storyboard.TargetName="ImageScaleTransform" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:00:0.15" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.ExitActions>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type pps:PpsSplitButton}" BasedOn="{StaticResource {x:Type pps:PpsButton}}" />

</ResourceDictionary>