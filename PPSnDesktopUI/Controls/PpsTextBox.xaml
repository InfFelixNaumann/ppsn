<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:pps="clr-namespace:TecWare.PPSn.Controls">

	<Style TargetType="{x:Type pps:PpsTextBox}">
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="Height" Value="23"/>
		<Setter Property="Padding" Value="2,0"/>
		<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}"/>
		<Setter Property="Background" Value="{DynamicResource PPSnControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource PPSnControlNormalBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="SelectionBrush" Value="Black"/>
		<Setter Property="SelectionOpacity" Value=".25"/>
		<Setter Property="CaretBrush" Value="{DynamicResource PPSnWindowForegroundBrush}"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsTextBox}">
					<Border x:Name="border"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							SnapsToDevicePixels="True">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="21" />
							</Grid.ColumnDefinitions>
							<Button x:Name="ClearButton"
									Grid.Column="1"
									Height="21"
									VerticalAlignment="Top"
									Foreground="{TemplateBinding Foreground}"
									Command="{x:Static pps:PpsTextBox.ClearTextCommand}"
									Style="{DynamicResource {x:Static pps:PpsSharedResourceKey.PpsClearContentButtonStyle}}" />
							<ScrollViewer x:Name="PART_ContentHost"
										  Focusable="False"
										  HorizontalScrollBarVisibility="Hidden"
										  VerticalScrollBarVisibility="Hidden" />
							<ScrollViewer x:Name="FormattedValueViewer"
										  Focusable="False"
										  HorizontalScrollBarVisibility="{Binding HorizontalScrollBarVisibility, ElementName=PART_ContentHost}"
										  VerticalScrollBarVisibility="{Binding VerticalScrollBarVisibility, ElementName=PART_ContentHost}"
										  CanContentScroll="{Binding CanContentScroll, ElementName=PART_ContentHost}"
										  Padding="{TemplateBinding Padding}"
										  Visibility="Hidden">
								<TextBlock Text="{TemplateBinding FormattedValue}"
										   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										   TextWrapping="{TemplateBinding TextWrapping}"
										   Margin="2,0,2,0" />
							</ScrollViewer>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PPSnControlFocusedBorderBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource PPSnWindowDisabledForegroundBrush}"/>
						</Trigger>
						<Trigger SourceName="ClearButton" Property="IsEnabled" Value="False">
							<Setter TargetName="ClearButton" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="AcceptsReturn" Value="True">
							<Setter Property="Padding" Value="2,2,2,0"/>
							<Setter Property="VerticalContentAlignment" Value="Top"/>
							<Setter Property="TextWrapping" Value="Wrap"/>
						</Trigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocused" Value="False"/>
								<Condition Property="HasFormattedValue" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="FormattedValueViewer" Property="Visibility" Value="Visible"/>
							<Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!--ToDo-->
	
	<!--<Popup Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
							   AllowsTransparency="True"
							   Margin="0,-1,0,0"
							   PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
							   IsOpen="{Binding HasError, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}">
		<Border BorderThickness="1 0 1 1" BorderBrush="Black">
			<Label Padding="3,1,3,1" Background="AntiqueWhite" Content="{Binding ErrorMessage, RelativeSource={RelativeSource TemplatedParent}}"/>
		</Border>
	</Popup>-->


</ResourceDictionary>