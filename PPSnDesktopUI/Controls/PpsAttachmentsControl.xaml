<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<UserControl x:Class="TecWare.PPSn.Controls.PpsAttachmentsControla"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
			 xmlns:ui="clr-namespace:TecWare.PPSn.UI"
             xmlns:uiL="clr-namespace:TecWare.PPSn.Controls"
             mc:Ignorable="d"
			 BorderThickness="1"
			 BorderBrush="{StaticResource PPSnSeparatorBrush}"
             d:DesignHeight="300" d:DesignWidth="300">
	<Grid>
		<!--<Grid.RowDefinitions>
			<RowDefinition Height="auto"/>
			<RowDefinition/>
		</Grid.RowDefinitions>

		<ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=Commands, Mode=OneWay}"
					  Focusable="False">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<WrapPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<uiL:PpsButton Command="{Binding Command}"
								   ToolTip="{Binding Description}"
								   DisplayMode="Image"
								   GeometryName="{Binding Image}"
								   GeometrySize="24"
								   Foreground="{StaticResource PPSnActionButtonBrush}"
								   Width="38" Height="38" Margin="0,0,6,0" />
					<DataTemplate.Triggers>
						<Trigger Property="uiL:PpsReadOnlyPaneBehavior.IsReadOnly">
							<Trigger.Value>
								<sys:Boolean>True</sys:Boolean>
							</Trigger.Value>
							<Setter Property="Visibility" Value="Collapsed" />
						</Trigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>

		<ListBox Grid.Row="1"
				 ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=AttachmentsSource, Mode=OneWay}"
				 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedAttachment, Mode=OneWayToSource}"
				 Style="{StaticResource PPSnListBoxStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
				 KeyboardNavigation.TabNavigation="Continue" Focusable="False">
			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<WrapPanel IsItemsHost="True" Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>
			<ListBox.ItemTemplate>
				<DataTemplate>
					<Grid Width="90">
						<Grid.RowDefinitions>
							<RowDefinition Height="64"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border x:Name="border" Grid.Row="0" BorderThickness="1"
								BorderBrush="{StaticResource PPSnControlBackgroundBrush}"
								Background="{StaticResource PPSnControlBackgroundBrush}">
							<Grid>
								<Image x:Name="image" Margin="1"
									   Source="{Binding LinkedObject.DataLazy.PreviewImageLazy, Mode=OneWay}"
									   Stretch="Uniform"/>
								<Viewbox x:Name="symbolBox" Width="20">
									<Path x:Name="symbolPath"
										  Data="{Binding LinkedObject.DataLazy.PreviewImageLazy, Mode=OneWay, Converter={x:Static ui:PpsConverter.ImageToPathGeometry}}"
										  Fill="{StaticResource PPSnWindowForegroundBrush}" Opacity=".55"/>
								</Viewbox>
								<Viewbox x:Name="imageBox" Width="20" Visibility="Hidden">
									<Path Data="{StaticResource imagePathGeometry}"
										  Fill="{StaticResource PPSnWindowForegroundBrush}" Opacity=".55"/>
								</Viewbox>
							</Grid>
						</Border>
						<DockPanel x:Name="panCommands" LastChildFill="False" HorizontalAlignment="Right" Margin="0,-6,-6,-6" Visibility="Hidden">
							<uiL:PpsButton Command="{x:Static uiL:PpsAttachmentsControl.RunAttachmentCommand}"
										   DisplayMode="Circle"
										   GeometryName="openInApp"
										   GeometrySize="30"
										   Foreground="{StaticResource PPSnWindowForegroundBrush}"
										   Fill="{StaticResource PPSnWindowBackgroundBrush}"
										   DockPanel.Dock="Top"/>
							<uiL:PpsButton x:Name="removeButton"
										   Command="{x:Static uiL:PpsAttachmentsControl.RemoveAttachmentCommand}"
										   DisplayMode="Circle"
										   GeometryName="delete"
										   GeometrySize="30"
										   Foreground="{StaticResource PPSnWindowForegroundBrush}"
										   Fill="{StaticResource PPSnWindowBackgroundBrush}"
										   DockPanel.Dock="Bottom"/>
						</DockPanel>
						<TextBlock Grid.Row="1" Text="{Binding Name, Mode=OneWay}" TextWrapping="Wrap" HorizontalAlignment="Center"
								   Foreground="{StaticResource PPSnWindowForegroundBrush}"/>
					</Grid>
					<DataTemplate.Triggers>
						<Trigger SourceName="image" Property="Source" Value="{x:Null}">
							<Setter TargetName="image" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<Trigger SourceName="symbolPath" Property="Data" Value="{x:Null}">
							<Setter TargetName="symbolBox" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="image" Property="Visibility" Value="Hidden"/>
								<Condition SourceName="symbolBox" Property="Visibility" Value="Hidden"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="imageBox" Property="Visibility" Value="Visible"/>
						</MultiTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True"/>
								<Condition Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True"/>
							</MultiDataTrigger.Conditions>
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
							<Setter TargetName="panCommands" Property="Visibility" Value="Visible"/>
						</MultiDataTrigger>
						<Trigger Property="uiL:PpsReadOnlyPaneBehavior.IsReadOnly">
							<Trigger.Value>
								<sys:Boolean>True</sys:Boolean>
							</Trigger.Value>
							<Setter TargetName="removeButton" Property="Visibility" Value="Hidden"/>
						</Trigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ListBox.ItemTemplate>
			<ListBox.ItemContainerStyle>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="VerticalAlignment" Value="Top" />
					<Setter Property="Margin" Value="0,8,10,2" />
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<ContentPresenter />
								<ControlTemplate.Triggers>
									<Trigger Property="IsFocused" Value="True">
										<Setter Property="IsSelected" Value="True" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListBox.ItemContainerStyle>
		</ListBox>
		<Grid.Style>
			<Style TargetType="{x:Type Grid}">
				<Setter Property="MinHeight" Value="23" />
				<Setter Property="Margin" Value="10,0,0,0" />
				<Style.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition  Binding="{Binding Path=BorderThickness.Left, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type UserControl}}}">
								<Condition.Value>
									<sys:Double>0</sys:Double>
								</Condition.Value>
							</Condition>
							<Condition  Binding="{Binding Path=BorderThickness.Top, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type UserControl}}}">
								<Condition.Value>
									<sys:Double>0</sys:Double>
								</Condition.Value>
							</Condition>
						</MultiDataTrigger.Conditions>
						<Setter Property="Margin" Value="0"/>
					</MultiDataTrigger>
				</Style.Triggers>
			</Style>
		</Grid.Style>-->
	</Grid>
</UserControl>