<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:pps="clr-namespace:TecWare.PPSn.Controls">

	<Style TargetType="{x:Type pps:PpsStackSectionItem}">
		<Setter Property="BorderBrush" Value="{DynamicResource PPSnSeparatorBrush}" />
		<Setter Property="Margin" Value="0,0,0,16" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsStackSectionItem}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="29" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<pps:PpsNamedSeparator IsHitTestVisible="True" IsEnabled="True" IsTabStop="False" VerticalContentAlignment="Stretch"
											   BorderBrush="{TemplateBinding BorderBrush}" Padding="1,0,1,0">
							<pps:PpsNamedSeparator.Content>
								<ToggleButton IsChecked="{Binding IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
											  Content="{Binding Header,RelativeSource={RelativeSource TemplatedParent}}"
											  Foreground="{TemplateBinding Foreground}">
									<ToggleButton.Style>
										<Style TargetType="{x:Type ToggleButton}">
											<Setter Property="Background" Value="Transparent" />
											<Setter Property="BorderBrush" Value="Transparent" />
											<Setter Property="BorderThickness" Value="1,1,1,1" />
											<Setter Property="FocusVisualStyle" Value="{x:Null}" />
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type ToggleButton}">
														<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
																BorderThickness="{TemplateBinding BorderThickness}"	Padding="4,0,6,0" SnapsToDevicePixels="True" >
															<Grid>
																<Canvas Width="16" Height="16" HorizontalAlignment="Left">
																	<Path x:Name="chevron" Fill="{TemplateBinding Foreground}" Opacity=".8"
																		  Data="M3.412,11.706 L8,7.122 12.588,11.706 14,10.294 8,4.294 2,10.294 Z" />
																</Canvas>
																<ContentPresenter VerticalAlignment="Center" Margin="21,0,0,0"/>
															</Grid>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsMouseOver" Value="True">
																<Setter Property="Background" Value="{DynamicResource PPSnMouseOverBrush}" />
																<Setter Property="BorderBrush" Value="{DynamicResource PPSnMouseOverBrush}" />
															</Trigger>
															<Trigger Property="IsFocused" Value="True">
																<Setter Property="BorderBrush" Value="{DynamicResource PPSnControlFocusedBorderBrush}" />
															</Trigger>
															<Trigger Property="IsPressed" Value="True">
																<Setter Property="Background" Value="{DynamicResource PPSnButtonPressedBrush}" />
															</Trigger>
															<Trigger Property="IsChecked" Value="False">
																<Setter TargetName="chevron" Property="Data" Value="M3.412,4.294 L8,8.878 12.588,4.294 14,5.706 8,11.706 2,5.706 Z" />
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</ToggleButton.Style>
								</ToggleButton>
							</pps:PpsNamedSeparator.Content>
						</pps:PpsNamedSeparator>
						<!--Margin.Left = 20 aus dem linken Teil des Separators plus margins, paddings und chevron des ToggleButtons-->
						<ContentPresenter x:Name="SubHeader" Content="{Binding SubHeader,RelativeSource={RelativeSource TemplatedParent}}"
										  Grid.Row="1" HorizontalAlignment="Left" Margin="47,0,0,0" TextBlock.FontStyle="Italic" Opacity=".75" Visibility="Collapsed" />

						<Border x:Name="ContentBorder" Grid.Row="2" Padding="0,6,0,6">
							<ContentPresenter />
						</Border>

						<!--<ToggleButton Grid.Row="0" HorizontalAlignment="Left" IsChecked="{Binding IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
							<ToggleButton.Style>
								<Style TargetType="{x:Type ToggleButton}">
									<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}" />
									<Setter Property="Background" Value="Yellow"/>
									<Setter Property="Focusable" Value="True" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Grid Background="{TemplateBinding Background}">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="Auto" />
														<ColumnDefinition />
													</Grid.ColumnDefinitions>
													<Grid.RowDefinitions>
														<RowDefinition />
														<RowDefinition />
													</Grid.RowDefinitions>
													<Border x:Name="HeaderBorder"
															BorderThickness="0,0,0,0"
															Margin="0,4,0,0"
															Padding="0,0,1,1"
															HorizontalAlignment="Left"
															VerticalAlignment="Top"
															SnapsToDevicePixels="True">
														<ContentPresenter Content="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type pps:PpsStackSectionItem}}}"
																		  HorizontalAlignment="Left"
																		  VerticalAlignment="Center"
																		  TextElement.FontSize="14"
																		  SnapsToDevicePixels="True"/>
													</Border>
													<Viewbox Grid.Column="1"
															 Width="20"
															 HorizontalAlignment="Left">
														<Canvas Width="24" Height="24">
															<Path x:Name="ChevronPath"
																  Data="{DynamicResource chevronDownThinPathGeometry}"
																  Fill="{TemplateBinding Foreground}"/>
														</Canvas>
													</Viewbox>

													<ContentPresenter x:Name="SubHeader"
																	  Content="{Binding SubHeader, RelativeSource={RelativeSource AncestorType={x:Type pps:PpsStackSectionItem}}}"
																	  Grid.ColumnSpan="2"
																	  Grid.Row="1"
																	  Margin="0,-4,4,4"
																	  HorizontalAlignment="Left"
																	  Visibility="Collapsed" />
												</Grid>
												<ControlTemplate.Triggers>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
															<Condition Binding="{Binding Path=HasSubHeader, RelativeSource={RelativeSource AncestorType={x:Type pps:PpsStackSectionItem}}}" Value="True" />
														</MultiDataTrigger.Conditions>
														<Setter TargetName="SubHeader" Property="Visibility" Value="Visible" />
													</MultiDataTrigger>
													<Trigger Property="IsChecked" Value="true">
													<Setter TargetName="ChevronPath" Property="Data" Value="{DynamicResource chevronUpThinPathGeometry}" />
														--><!--<Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource PPSnMarkerBrush}" />--><!--
													</Trigger>
													<Trigger Property="IsMouseOver" Value="true">
														<Setter Property="Background" Value="{DynamicResource PPSnMouseOverBrush}"/>
													</Trigger>
													<Trigger Property="IsPressed" Value="true">
														<Setter Property="Background" Value="{DynamicResource PPSnButtonPressedBrush}"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>-->
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="False">
							<Setter TargetName="ContentBorder" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsExpanded" Value="False" />
								<Condition Property="HasSubHeader" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="SubHeader" Property="Visibility" Value="Visible" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>