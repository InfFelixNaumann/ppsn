<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:pps="clr-namespace:TecWare.PPSn.Controls">

	<Style TargetType="{x:Type pps:PpsStackSectionItem}">
		<Setter Property="Margin" Value="0,0,0,16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsStackSectionItem}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition x:Name="Auto" />
						</Grid.RowDefinitions>

						<ToggleButton Grid.Row="0"
									  HorizontalAlignment="Left"
									  IsChecked="{Binding IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
							<ToggleButton.Style>
								<Style TargetType="{x:Type ToggleButton}">
									<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}" />
									<Setter Property="Background" Value="Transparent"/>
									<Setter Property="Focusable" Value="True" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Grid Background="{TemplateBinding Background}">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="auto" />
														<ColumnDefinition />
													</Grid.ColumnDefinitions>
													<Grid.RowDefinitions>
														<RowDefinition />
														<RowDefinition />
													</Grid.RowDefinitions>
													<Border x:Name="HeaderBorder"
															BorderThickness="0,0,0,4"
															Margin="0,4,0,0"
															Padding="0,0,1,1"
															HorizontalAlignment="Left"
															VerticalAlignment="Top"
															SnapsToDevicePixels="True">
														<ContentPresenter Content="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type pps:PpsStackSectionItem}}}"
																		  HorizontalAlignment="Left"
																		  VerticalAlignment="Center"
																		  TextElement.FontSize="14"
																		  SnapsToDevicePixels="True"/>
													</Border>
													<Viewbox Grid.Column="1"
															 Width="20"
															 HorizontalAlignment="Left">
														<Canvas Width="24" Height="24">
															<Path x:Name="ChevronPath"
																  Data="{DynamicResource chevronDownThinPathGeometry}"
																  Fill="{TemplateBinding Foreground}"/>
														</Canvas>
													</Viewbox>

													<ContentPresenter x:Name="SubHeader"
																	  Content="{Binding SubHeader, RelativeSource={RelativeSource AncestorType={x:Type pps:PpsStackSectionItem}}}"
																	  Grid.ColumnSpan="2"
																	  Grid.Row="1"
																	  Margin="0,-4,4,4"
																	  HorizontalAlignment="Left"
																	  Visibility="Collapsed" />
												</Grid>
												<ControlTemplate.Triggers>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
															<Condition Binding="{Binding Path=HasSubHeader, RelativeSource={RelativeSource AncestorType={x:Type pps:PpsStackSectionItem}}}" Value="True" />
														</MultiDataTrigger.Conditions>
														<Setter TargetName="SubHeader" Property="Visibility" Value="Visible" />
													</MultiDataTrigger>
													<Trigger Property="IsChecked" Value="true">
														<Setter TargetName="ChevronPath" Property="Data" Value="{DynamicResource chevronUpThinPathGeometry}" />
														<Setter TargetName="HeaderBorder" Property="BorderBrush" Value="{DynamicResource PPSnMarkerBrush}" />
													</Trigger>
													<Trigger Property="IsMouseOver" Value="true">
														<Setter Property="Background" Value="{DynamicResource PPSnMouseOverBrush}"/>
													</Trigger>
													<Trigger Property="IsPressed" Value="true">
														<Setter Property="Background" Value="{DynamicResource PPSnButtonPressedBrush}"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>

						<Border x:Name="ContentBorder" Padding="0,16,0,8" Grid.Row="1" >
							<ContentPresenter />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="False">
							<Setter TargetName="ContentBorder" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>