<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->

<UserControl x:Class="TecWare.PPSn.Controls.PpsCommandBarControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TecWare.PPSn.Controls"
			 xmlns:ui="clr-namespace:TecWare.PPSn.UI;assembly=PPSn.Desktop.UI"
			 xmlns:uiL="clr-namespace:TecWare.PPSn.UI"
			 xmlns:uiC="clr-namespace:TecWare.PPSn.Controls;assembly=PPSn.Desktop.UI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

	<UserControl.Resources>
		<uiL:PpsImageResourceKeyConverter x:Key="imageResourceKeyConverter"/>
		<Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="Foreground" Value="{StaticResource PPSnWindowForegroundBrush}"/>
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="BorderBrush" Value="Transparent" />
			<Setter Property="Padding" Value="6,0"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Focusable" Value="False" />
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" Value="{StaticResource PPSnMouseOverBrush}"/>
								<Setter Property="BorderBrush" Value="{StaticResource PPSnWindowForegroundBrush}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="border" Value="{StaticResource PPSnButtonPressedBrush}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.35"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ToolBarSplitButtonStyle" TargetType="{x:Type local:SplitButton}" BasedOn="{StaticResource ToolBarButtonStyle}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type local:SplitButton}">
						<Grid x:Name="layoutGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Border x:Name="border" Padding="6,0,4,0" BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<ContentPresenter/>
							</Border>
							<Button x:Name="PART_Dropdown" Grid.Column="1" Width="21" Focusable="False" 
								BorderThickness="0,1,1,1" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"
								Foreground="{StaticResource PPSnWindowForegroundBrush}" Background="{TemplateBinding Background}">
								<Button.Style>
									<Style TargetType="{x:Type Button}">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Button}">
													<Border BorderBrush="{TemplateBinding BorderBrush}"
														BorderThickness="{TemplateBinding BorderThickness}" 
														Background="{TemplateBinding Background}">
														<Path HorizontalAlignment="Center" VerticalAlignment="Center" Opacity=".9"
														  Fill="{TemplateBinding Foreground}"
														  Data="M 0 3 L 5 10 L 10 3 Z"/>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Button.Style>
							</Button>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" TargetName="layoutGrid" Value="{StaticResource PPSnMouseOverBrush}"/>
								<Setter Property="BorderBrush" Value="{StaticResource PPSnWindowForegroundBrush}"/>
								<Setter Property="BorderBrush" TargetName="PART_Dropdown" Value="{StaticResource PPSnWindowForegroundBrush}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource PPSnButtonPressedBrush}"/>
							</Trigger>
							<Trigger Property="IsPressed" SourceName="PART_Dropdown" Value="True">
								<Setter Property="Background" TargetName="PART_Dropdown" Value="{StaticResource PPSnButtonPressedBrush}"/>
							</Trigger>
							<Trigger Property="IsOpen" Value="True">
								<Setter Property="Background" TargetName="layoutGrid" Value="{StaticResource PPSnMouseOverBrush}"/>
								<Setter Property="BorderBrush" Value="{StaticResource PPSnWindowForegroundBrush}"/>
								<Setter Property="BorderBrush" TargetName="PART_Dropdown" Value="{StaticResource PPSnWindowForegroundBrush}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.35"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate x:Key="{x:Type uiL:PpsUICommandButton}">
			<!--Default Style is Round-->
			<Button x:Name="PART_CmdButton" Style="{StaticResource PPSnCircleButtonStyle}" 
									Content="{Binding DisplayText}" 
									ToolTip="{Binding Description}" 
									Tag="{Binding Image, Mode=OneTime, Converter={StaticResource imageResourceKeyConverter}}" 
									Margin="0,0,16,0"/>
			<DataTemplate.Triggers>
				<DataTrigger 
					Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=Mode}" 
					Value="{x:Static local:CommandBarMode.Rectangle}">
					<Setter TargetName="PART_CmdButton" Property="Style" Value="{x:Null}"/>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
		<DataTemplate x:Key="{x:Type uiL:PpsUISplitCommandButton}">
			<local:SplitButton ToolTip="{Binding Description}" Command="{Binding Command}"
								 Popup="{Binding Popup}"
								 ContextMenu="{Binding ContextMenu}">
				<StackPanel Orientation="Horizontal">
					<Viewbox Width="22" Height="22" Margin="0,0,3,0" HorizontalAlignment="Center">
						<Canvas Width="24" Height="24">
							<Path Data="{Binding Image, Mode=OneTime, Converter={StaticResource imageResourceKeyConverter}}"
									  Fill="{StaticResource PPSnActionButtonBrush}"/>
						</Canvas>
					</Viewbox>
					<TextBlock 
						Text="{Binding DisplayText}" 
						VerticalAlignment="Center" 
						Foreground="{StaticResource PPSnWindowForegroundBrush}"/>
				</StackPanel>
			</local:SplitButton>
		</DataTemplate>
		<DataTemplate x:Key="Separator">
			<Grid Width="16"/>
		</DataTemplate>
		<local:PpsCommandBarDataTemplateSelector x:Key="commandbarDataTemplateSelector"/>
	</UserControl.Resources>
	<Grid>
		<ItemsControl 
			ItemTemplateSelector="{StaticResource commandbarDataTemplateSelector}" 
			ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=Commands}">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</ItemsControl>
	</Grid>
</UserControl>
