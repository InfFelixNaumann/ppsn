<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->

<UserControl x:Class="TecWare.PPSn.UI.PpsPicturePane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TecWare.PPSn.UI"
			 xmlns:clr="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
	<UserControl.Resources>
		<local:LuaValueConverter x:Key="ScaleConverter">
			<![CDATA[
					if value[1] ~= clr.System.Windows.DependencyProperty:UnsetValue then
						local fact = value[0] / value[1];
						return clr.System.Windows.Media.MatrixTransform(fact, 0, 0, fact, 0, 0);
					else
						return clr.System.Windows.Media.MatrixTransform(1, 0, 0, 1, 0, 0);
					end;
				]]>
		</local:LuaValueConverter>
		<local:LuaValueConverter x:Key="IsListEmptyConverter">
			<![CDATA[
					if value == nil then
						return true;
					end;
					if value.Count < 1 then
						return true;
					end;
					return false;
				]]>
		</local:LuaValueConverter>

		<local:LuaValueConverter x:Key="PreviewHeightConverter">
			<![CDATA[
				return 220.0;
			]]>
		</local:LuaValueConverter>

		<CollectionViewSource
			x:Key="FilteredAttachments"
			Filter="ShowOnlyObjectImageDataFilter"
			IsLiveFilteringRequested="True"
			Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PpsPicturePane}}, Path=Attachments}">
			<CollectionViewSource.LiveFilteringProperties>
				<clr:String>MimeType</clr:String>
			</CollectionViewSource.LiveFilteringProperties>
		</CollectionViewSource>
		<Style x:Key="PPSnColorItemsControlStyle" TargetType="{x:Type ItemsControl}">
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate>
						<Border BorderThickness="1" BorderBrush="Black" Margin="5">
							<Button 
								Width="30" 
								Height="30" 
								Command="{x:Static local:PpsPicturePane.OverlaySetColorCommand}" 
								CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=Popup}}" 
								CommandParameter="{Binding}" 
								Background="{Binding Brush}"/>
						</Border>
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<UniformGrid Columns="3" />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Focusable" Value="False"/>
		</Style>
		<Style x:Key="PPSnThicknessItemsControlStyle" TargetType="{x:Type ItemsControl}">
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate>
						<Grid Margin="5">
							<Button 
								VerticalAlignment="Stretch"
								Height="25"
								Command="{x:Static local:PpsPicturePane.OverlaySetThicknessCommand}" 
								CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=Popup}}" 
								CommandParameter="{Binding}" HorizontalContentAlignment="Stretch">
								<Rectangle Fill="Black" Height="{Binding Size}" HorizontalAlignment="Stretch"  Margin="2"/>
							</Button>
						</Grid>
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		</Style>

		<Style x:Key="PPSnStrokeSettingsControlStyle" TargetType="{x:Type UserControl}">
			<Setter Property="Content">
				<Setter.Value>
					<Grid Background="{StaticResource PPSnWindowBackgroundBrush}">
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<ItemsControl 
							Grid.Row="0" 
							Style="{StaticResource PPSnColorItemsControlStyle}"
							Margin="5"
							ItemsSource="{Binding Colors}"
							Background="{StaticResource PPSnWindowBackgroundBrush}"/>
						<ItemsControl 
							Grid.Row="1" 
							Style="{StaticResource PPSnThicknessItemsControlStyle}"
							Margin="5"
							ItemsSource="{Binding Thicknesses}" 
							VerticalAlignment="Stretch" 
							VerticalContentAlignment="Stretch"/>
					</Grid>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<!--this is the control for Camera Settings-->
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>
		<Image 
			Grid.Row="0"
			Source="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedCamera.Preview, Mode=OneWay}">
			<Image.Style>
				<Style TargetType="Image">
					<Setter Property="Visibility" Value="Visible"/>
					<Style.Triggers>
						<DataTrigger 
							Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedCamera, Mode=OneWay}" 
							Value="{x:Null}">
							<Setter Property="Visibility" Value="Hidden"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Image.Style>
		</Image>
		<Image 
			Grid.RowSpan="2"
			Width="1"
			VerticalAlignment="Bottom"
			HorizontalAlignment="Center"
			Source="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=LastSnapshot.DataLazy.RawData, Mode=OneWay, NotifyOnTargetUpdated=True}" 
			Opacity="0">
			<Image.RenderTransform>
				<ScaleTransform  />
			</Image.RenderTransform>
			<Image.Triggers>
				<EventTrigger RoutedEvent="Binding.TargetUpdated">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" />
							<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.4" BeginTime="0:0:0.5" Duration="0:0:1" />
							<DoubleAnimation 
								Storyboard.TargetProperty="Width" 
								From="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}, Path=ActualWidth}" 
								To="0" 
								BeginTime="0:0:0.5" 
								Duration="0:0:1"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Image.Triggers>
		</Image>
		<Grid
			Grid.Row="0"
			Margin="0,10,10,0"
			VerticalAlignment="Top"
			HorizontalAlignment="Right" >
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Border
				Grid.Column="0" 
				Grid.ColumnSpan="2" 
				Background="AliceBlue" 
				Opacity="0.6"
				CornerRadius="5,50,50,5">
				<Border.Style>
					<Style TargetType="Border">
						<Style.Triggers>
							<DataTrigger Binding="{Binding ElementName=CameraSettingsToggleButton, Path=IsChecked, Mode=OneWay}" Value="False">
								<Setter Property="Visibility" Value="Collapsed"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Border.Style>
			</Border>
			<ListBox 
				Grid.Column="0" 
				ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedCamera.Properties}" 
				Background="{x:Null}" 
				BorderBrush="{x:Null}">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Border
							BorderBrush="{StaticResource PPSnWindowFooterBrush}" 
							BorderThickness="1" 
							CornerRadius="8">
							<Grid Margin="5">
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="200"/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<TextBlock Grid.ColumnSpan="2" Grid.Row="0" Foreground="{StaticResource PPSnWindowFooterBrush}" Text="{Binding Name}"/>
								<Slider Grid.Column="0" Grid.Row="1" Minimum="{Binding MinValue}" Maximum="{Binding MaxValue}" Value="{Binding Value}">
								</Slider>
								<CheckBox Grid.Column="1" Grid.Row="1" IsChecked="{Binding AutomaticValue}" Content="Auto"/>
							</Grid>
						</Border>
					</DataTemplate>
				</ListBox.ItemTemplate>
				<ListBox.Style>
					<Style TargetType="ListBox">
						<Style.Triggers>
							<DataTrigger Binding="{Binding ElementName=CameraSettingsToggleButton, Path=IsChecked, Mode=OneWay}" Value="False">
								<Setter Property="Visibility" Value="Collapsed"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</ListBox.Style>
			</ListBox>
			<ToggleButton 
				Grid.Column="1"
				IsChecked="False"
				Width="100"
				Height="100" 
				Cursor="Hand"
				ToolTip="Kameraeinstellungen"
				x:Name="CameraSettingsToggleButton">
				<ToggleButton.Template>
					<ControlTemplate TargetType="ToggleButton">
						<Grid>
							<Ellipse Fill="AliceBlue" Opacity="0.6"/>
							<Image HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="30">
								<Image.Source>
									<DrawingImage>
										<DrawingImage.Drawing>
											<GeometryDrawing
												Brush="{StaticResource PPSnWindowFooterBrush}"  
												Geometry="{StaticResource settingsPathGeometry}"/>
										</DrawingImage.Drawing>
									</DrawingImage>
								</Image.Source>
							</Image>
						</Grid>
					</ControlTemplate>
				</ToggleButton.Template>
				<ToggleButton.Style>
					<Style TargetType="ToggleButton">
						<Style.Triggers>
							<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedCamera.Properties, Converter={StaticResource IsListEmptyConverter}}" Value="true">
								<Setter Property="Visibility" Value="Collapsed"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</ToggleButton.Style>
			</ToggleButton>

			<Image 
				Grid.Column="1" 
				VerticalAlignment="Bottom" 
				HorizontalAlignment="Right" 
				Width="20" 
				Height="20" 
				Margin="5" 
				ToolTip="Einige Kameraeinstellungen wurden manuell festgelegt.">
				<Image.Source>
					<DrawingImage>
						<DrawingImage.Drawing>
							<GeometryDrawing
								Brush="{StaticResource PPSnWindowFooterBrush}"  
								Geometry="{StaticResource informationPathGeometry}"/>
						</DrawingImage.Drawing>
					</DrawingImage>
				</Image.Source>
				<Image.Style>
					<Style TargetType="Image">
						<Style.Triggers>
							<DataTrigger
								Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedCamera.AutomaticSettings}" Value="True">
								<Setter Property="Visibility" Value="Collapsed"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Image.Style>
			</Image>
			<Grid.Style>
				<Style TargetType="Grid">
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedCamera}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
		</Grid>
		<!--Button to make a Photo-->
		<Button 
			Grid.Row="0"
			Width="200"
			Height="200"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Margin="0,0,10,10" 
			Command="{x:Static ApplicationCommands.New}" 
			Cursor="Hand"
			ToolTip="Bild erstellen">
			<Button.Template>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Ellipse Fill="AliceBlue" Opacity="0.6"/>
						<Image HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="30">
							<Image.Source>
								<DrawingImage>
									<DrawingImage.Drawing>
										<GeometryDrawing
											Brush="{StaticResource PPSnWindowFooterBrush}"  
											Geometry="{StaticResource cameraPathGeometry}"/>
									</DrawingImage.Drawing>
								</DrawingImage>
							</Image.Source>
						</Image>
					</Grid>
				</ControlTemplate>
			</Button.Template>
			<Button.Style>
				<Style TargetType="Button">
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedCamera}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Button.Style>
		</Button>
		<Grid
			Grid.Row="0">
			<Image
				x:Name="CurrentObjectImageMax"
				DataContext="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedAttachment, UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
				Source="{Binding LinkedObject.DataLazy.RawData}">
				<!-- RK: Image can handle byte[] as source -->
			</Image>
			<InkCanvas
				Cursor="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=InkEditCursor}"
				Width="{Binding ElementName=CurrentObjectImageMax, Path=Source.Width}"
				Height="{Binding ElementName=CurrentObjectImageMax, Path=Source.Height}"
				UseCustomCursor="True"
				Background="Transparent"
				EditingMode="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=InkEditMode, Mode=OneWay}"
				Strokes="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=InkStrokes, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
				DefaultDrawingAttributes="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=InkDrawingAttributes, Mode=OneWay}">
				<InkCanvas.LayoutTransform>
					<MultiBinding Mode="OneWay" Converter="{StaticResource ScaleConverter}">
						<Binding ElementName="CurrentObjectImageMax" Path="ActualWidth"/>
						<Binding ElementName="CurrentObjectImageMax" Path="Source.Width"/>
					</MultiBinding>
				</InkCanvas.LayoutTransform>
			</InkCanvas>
			<Grid.Style>
				<Style TargetType="{x:Type Grid}">
					<Setter Property="Visibility" Value="Visible"/>
					<Style.Triggers>
						<DataTrigger 
							Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=SelectedAttachment, Mode=OneWay}" 
							Value="{x:Null}">
							<Setter Property="Visibility" Value="Hidden"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
		</Grid>
		
		<!--<ItemsControl
			Grid.Row="0"
			VerticalAlignment="Top"
			HorizontalAlignment="Left"
			Background="Transparent"
			Focusable="False" 
			ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PpsPicturePane}}, Path=CameraEnum}">
			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<Button 
						Command="{x:Static local:PpsPicturePane.ChangeCameraCommand}" 
						CommandParameter="{Binding}" 
						MaxHeight="280" 
						Width="180" 
						Margin="10" 
						Background="Transparent"
						BorderThickness="0"
						VerticalContentAlignment="Stretch"
						ToolTip="Diese Kamera auswählen">
						<Grid VerticalAlignment="Stretch" Margin="3">
							<Grid.RowDefinitions>
								<RowDefinition/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<Border 
								Grid.RowSpan="2" 
								BorderThickness="1" 
								BorderBrush="{StaticResource PPSnWindowFooterBrush}" 
								Background="AliceBlue" 
								Opacity="0.2" 
								Margin="-5"/>
							<Image Grid.Row="0" Source="{Binding Preview, TargetNullValue={x:Null}}"/>
							<Image Grid.Row="0" Width="50" Height="50" Opacity="0.6">
								<Image.Source>
									<DrawingImage>
										<DrawingImage.Drawing>
											<GeometryDrawing 
												Brush="AliceBlue"
												Geometry="{StaticResource cameraPathGeometry}"/>
										</DrawingImage.Drawing>
									</DrawingImage>
								</Image.Source>
							</Image>
							<Border 
								Grid.Row="1" 
								VerticalAlignment="Bottom" 
								HorizontalAlignment="Center" 
								BorderThickness="1" 
								Background="AliceBlue" 
								Opacity="0.7" 
								CornerRadius="5">
								<TextBlock
									Foreground="{StaticResource PPSnWindowFooterBrush}"
									Margin="5,2,5,2"
									Text="{Binding Path=Name}"/>
							</Border>
						</Grid>
					</Button>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>-->

		<ListBox ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PpsPicturePane}}, Path=CameraEnum}"
				 SelectedItem="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedCamera, Mode=OneWay}"
				 Style="{StaticResource PPSnListBoxStyle}"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
				 HorizontalAlignment="Left" VerticalAlignment="Top" Margin="16,0,0,0"
				 Focusable="False">
			<ListBox.ItemTemplate>
				<DataTemplate>
					<Button x:Name="cameraButton"
							Command="{x:Static local:PpsPicturePane.ChangeCameraCommand}" 
							CommandParameter="{Binding}" 
							Background="Transparent"
							Width="180"
							Padding="1,3,1,0"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch"
							ToolTip="Diese Kamera auswählen">
						<!--<Button.Height>
							<MultiBinding Mode="OneWay" Converter="{StaticResource PreviewHeightConverter}">
								<Binding ElementName="cameraButton" Path="Width"/>
								<Binding ElementName="cameraButton" Path="Width"/>
							</MultiBinding>
						</Button.Height>-->
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="21"/>
							</Grid.RowDefinitions>
							<Image x:Name="previewImage" Grid.Row="0" Source="{Binding Preview, TargetNullValue={x:Null}}"/>
							<Viewbox Grid.Row="0" Width="48" Height="48" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity=".75">
								<Canvas Width="24" Height="24">
									<Path Data="{StaticResource cameraPathGeometry}" Fill="WhiteSmoke"/>
								</Canvas>
							</Viewbox>
							<TextBlock Grid.Row="1" Text="{Binding ElementName=previewImage, Path=ActualHeight}"
									   TextAlignment="Center" VerticalAlignment="Center"
									   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
						</Grid>
					</Button>
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
							<Setter TargetName="cameraButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ListBox.ItemTemplate>
			<ListBox.ItemContainerStyle>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="Margin" Value="0,0,0,16"/>
					<Setter Property="Focusable" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<ContentPresenter />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListBox.ItemContainerStyle>
		</ListBox>

		<Border x:Name="existingImagesPanel" Grid.Row="1" Height="156" Padding="16,16,0,0">
			<ListBox x:Name="imagesList" 
					 ItemsSource="{Binding Source={StaticResource FilteredAttachments}}"
					 SelectedItem="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedAttachment, Mode=OneWay}"
					 Style="{StaticResource PPSnListBoxStyle}"
					 ScrollViewer.VerticalScrollBarVisibility="Disabled"
					 Focusable="False">
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Button x:Name="imageButton"
							Command="{x:Static local:PpsPicturePane.EditOverlayCommand}" 
							CommandParameter="{Binding}" 
							Background="Transparent"
							Width="180" 
							Padding="1,3,1,0"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition Height="21"/>
								</Grid.RowDefinitions>
								<Image Source="{Binding Path=LinkedObject.DataLazy.PreviewImageLazy, Mode=OneWay}"
								   Stretch="Uniform"  />
								<TextBlock Grid.Row="1" Text="{Binding Path=Name}"
									   TextAlignment="Center" VerticalAlignment="Center"
									   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
								<Button x:Name="removeButton" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" MinWidth="36"
									Command="{x:Static ApplicationCommands.Delete}"
									CommandParameter="{Binding}"
									Background="{StaticResource PPSnWindowBackgroundBrush}" Foreground="{StaticResource PPSnWindowForegroundBrush}"
									Tag="{StaticResource deletePathGeometry}"
									Style="{StaticResource PPSnCircleButtonStyle}"
									Visibility="Hidden"/>
							</Grid>
						</Button>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="True">
								<Setter TargetName="imageButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
								<Setter TargetName="removeButton" Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ListBox.ItemTemplate>
				<ListBox.ItemContainerStyle>
					<Style TargetType="{x:Type ListBoxItem}">
						<Setter Property="Margin" Value="0,0,16,0"/>
						<Setter Property="Focusable" Value="False"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ListBoxItem}">
									<ContentPresenter />
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.ItemContainerStyle>
			</ListBox>
		</Border>
	
		<ToggleButton VerticalAlignment="Bottom" HorizontalAlignment="Center">
			<ToggleButton.Triggers>
				<EventTrigger RoutedEvent="ToggleButton.Checked">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Height"                                                     
                                     Storyboard.TargetName="existingImagesPanel"
                                     To="0" 
                                     Duration="0:0:0.25" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="ToggleButton.Unchecked">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Height"                                                     
                                     Storyboard.TargetName="existingImagesPanel"
                                     To="156" 
                                     Duration="0:0:0.25" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</ToggleButton.Triggers>
			<ToggleButton.Template>
				<ControlTemplate>
					<Border
						Background="AliceBlue" 
						Opacity="0.6"
						CornerRadius="15,15,0,0">
						<Grid Margin="10">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition/>
								<ColumnDefinition/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Image Grid.Column="0" Width="30" Height="30" HorizontalAlignment="Left" Margin="10,0,5,0">
								<Image.Source>
									<DrawingImage>
										<DrawingImage.Drawing>
											<GeometryDrawing 
												Brush="{StaticResource PPSnWindowFooterBrush}"  
												Geometry="{StaticResource goBackPathGeometry}"/>
										</DrawingImage.Drawing>
									</DrawingImage>
								</Image.Source>
								<Image.RenderTransform>
									<RotateTransform Angle="-90"/>
								</Image.RenderTransform>
								<Image.RenderTransformOrigin>
									<Point X="0.5" Y="0.5"/>
								</Image.RenderTransformOrigin>
								<Image.Style>
									<Style TargetType="Image">
										<Style.Triggers>
											<DataTrigger 
												Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}},Path=IsChecked}" 
												Value="true">
												<Setter Property="LayoutTransform">
													<Setter.Value>
														<RotateTransform Angle="180"/>
													</Setter.Value>
												</Setter>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Image.Style>
							</Image>
							<Image Grid.Column="1" Width="30" Height="30" HorizontalAlignment="Left" Margin="5,0,5,0">
								<Image.Source>
									<DrawingImage>
										<DrawingImage.Drawing>
											<GeometryDrawing 
												Brush="{StaticResource PPSnWindowFooterBrush}"  
												Geometry="{StaticResource imageGalleryGeometry}"/>
										</DrawingImage.Drawing>
									</DrawingImage>
								</Image.Source>
							</Image>
							<TextBlock
								Grid.Column="2"
								Text="Bilderliste"
								VerticalAlignment="Center"
								Foreground="{StaticResource PPSnWindowFooterBrush}"/>
							<Image Grid.Column="3" Width="30" Height="30" HorizontalAlignment="Left" Margin="15,0,0,0">
								<Image.Source>
									<DrawingImage>
										<DrawingImage.Drawing>
											<GeometryDrawing 
												Brush="{StaticResource PPSnWindowFooterBrush}"  
												Geometry="{StaticResource goBackPathGeometry}"/>
										</DrawingImage.Drawing>
									</DrawingImage>
								</Image.Source>
								<Image.RenderTransform>
									<RotateTransform Angle="-90"/>
								</Image.RenderTransform>
								<Image.RenderTransformOrigin>
									<Point X="0.5" Y="0.5"/>
								</Image.RenderTransformOrigin>
								<Image.Style>
									<Style TargetType="Image">
										<Style.Triggers>
											<DataTrigger 
												Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}},Path=IsChecked}" 
												Value="true">
												<Setter Property="LayoutTransform">
													<Setter.Value>
														<RotateTransform Angle="180"/>
													</Setter.Value>
												</Setter>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Image.Style>
							</Image>
						</Grid>
					</Border>
				</ControlTemplate>
			</ToggleButton.Template>
		</ToggleButton>
	</Grid>
</UserControl>