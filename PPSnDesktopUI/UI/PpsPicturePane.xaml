<!--
Licensed under the EU, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<UserControl x:Class="TecWare.PPSn.UI.PpsPicturePane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TecWare.PPSn.UI"
			 xmlns:uiC="clr-namespace:TecWare.PPSn.Controls"
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
			 mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
	<Image Source="{Binding CurrentImage}" />

	<!--<UserControl.Resources>
		<local:LuaValueConverter x:Key="ScaleConverter">
			<![CDATA[
					if value[1] ~= clr.System.Windows.DependencyProperty:UnsetValue then
						local fact = value[0] / value[1];
						return clr.System.Windows.Media.MatrixTransform(fact, 0, 0, fact, 0, 0);
					else
						return clr.System.Windows.Media.MatrixTransform(1, 0, 0, 1, 0, 0);
					end;
				]]>
		</local:LuaValueConverter>

		<local:LuaValueConverter x:Key="IsCameraSettingsEnabledConverter">
			<![CDATA[
				if value == nil then
					return false;
				elseif value.Properties == nil then
					return false;
				elseif value.Properties.Count < 1 then
					return false;
				end;
				return true;
			]]>
		</local:LuaValueConverter>

		--><!--parms[0] = Control.Witdh: substract border(2 * 1pxl) and padding(2 * 3pxl)
		parms[1] = ratio: calc image height
		returns Control.Height: add border(2 * 1pxl), padding(2 * 3pxl) and footer(19pxl)--><!--
		<local:LuaValueConverter x:Key="PreviewHeightConverter">
			<![CDATA[
				local retval = 145.0;
				if value[1] ~= clr.System.Windows.DependencyProperty:UnsetValue then
					local imageWidth = value[0] - 8.0;
					local imageHeight = imageWidth / value[1];
					retval = imageHeight + 27;
				end;
				return retval;
			]]>
		</local:LuaValueConverter>

		<CollectionViewSource x:Key="FilteredAttachments"
							  Filter="ShowOnlyObjectImageDataFilter"
							  IsLiveFilteringRequested="True"
							  Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=Attachments}">
			<CollectionViewSource.LiveFilteringProperties>
				<sys:String>MimeType</sys:String>
			</CollectionViewSource.LiveFilteringProperties>
		</CollectionViewSource>

		<sys:Double x:Key="PpsPicturePaneImagePanelHeight">134</sys:Double>
		<SolidColorBrush x:Key="PpsPicturePaneBorderBrush" Color="{StaticResource PPSnAccentColor}" Opacity="0.45"/>
		<SolidColorBrush x:Key="PpsPicturePaneBackgroundBrush" Color="{StaticResource PPSnDesktopColor}" Opacity="0.45"/>

		<Style x:Key="PPSnStrokeSettingsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<ContentPresenter />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="PPSnStrokeColorListBoxStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource PPSnListBoxStyle}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="ItemContainerStyle" Value="{StaticResource PPSnStrokeSettingsListBoxItemStyle}"/>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate>
						<uiC:PpsButton x:Name="colorButton"
									   Command="{x:Static local:PpsPicturePane.OverlaySetColorCommand}" 
									   CommandParameter="{Binding}"
									   Focusable="False"
									   Background="Transparent"
									   BorderBrush="{StaticResource PpsPicturePaneBorderBrush}"
									   HorizontalContentAlignment="Stretch"
									   VerticalContentAlignment="Stretch"
									   Padding="0,2" Width="30" Height="30" Margin="3">
							<uiC:PpsButton.Content>
								<Rectangle Fill="{Binding Brush}"/>
							</uiC:PpsButton.Content>
						</uiC:PpsButton>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
								<Setter TargetName="colorButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
								<Setter TargetName="colorButton" Property="BorderThickness" Value="2"/>
								<Setter TargetName="colorButton" Property="Padding" Value="-1,1"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<UniformGrid Columns="3"/>
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="PPSnStrokeThicknessListBoxStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource PPSnListBoxStyle}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="ItemContainerStyle" Value="{StaticResource PPSnStrokeSettingsListBoxItemStyle}"/>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate>
						<uiC:PpsButton x:Name="thicknessButton"
									   Command="{x:Static local:PpsPicturePane.OverlaySetThicknessCommand}" 
									   CommandParameter="{Binding}"
									   Focusable="False"
									   Background="Transparent"
									   BorderBrush="Transparent"
									   HorizontalContentAlignment="Stretch"
									   VerticalContentAlignment="Stretch"
									   Padding="1,3" Height="26" Margin="3,1,3,0">
							<uiC:PpsButton.Content>
								<Rectangle Height="{Binding Size}" Fill="{StaticResource PPSnWindowForegroundBrush}" Margin="6,0"/>
							</uiC:PpsButton.Content>
						</uiC:PpsButton>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
								<Setter TargetName="thicknessButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
								<Setter TargetName="thicknessButton" Property="BorderThickness" Value="2"/>
								<Setter TargetName="thicknessButton" Property="Padding" Value="0,2"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	
	<Grid>
		<Grid.Margin>
			<Thickness Left="{StaticResource PPSnPaneBorderSizeLeft}" Top="16" Right="0" Bottom="0" />
		</Grid.Margin>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>

		<Image Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedCamera.Preview, Mode=OneWay}"
			   Visibility="{Binding SelectedCamera, RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Converter={x:Static local:PpsConverter.Visibility}}" />

		<Image Grid.RowSpan="2"
			   Width="1"
			   VerticalAlignment="Bottom"
			   HorizontalAlignment="Center"
			   Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=LastSnapshot.DataLazy.RawData, Mode=OneWay, NotifyOnTargetUpdated=True}" 
			   Opacity="0">
			<Image.RenderTransform>
				<ScaleTransform  />
			</Image.RenderTransform>
			<Image.Triggers>
				<EventTrigger RoutedEvent="Binding.TargetUpdated">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.25" />
							<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.4" BeginTime="0:0:0.25" Duration="0:0:0.5" />
							<DoubleAnimation 
								Storyboard.TargetProperty="Width" 
								From="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ActualWidth}" 
								To="0" 
								BeginTime="0:0:0.25" 
								Duration="0:0:0.5"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Image.Triggers>
		</Image>

		--><!--Button to make a Photo--><!--
		<uiC:PpsButton Command="{x:Static ApplicationCommands.New}"
					   DisplayMode="Circle"
					   GeometryName="camera"
					   GeometrySize="100"
					   Fill="{StaticResource PpsPicturePaneBackgroundBrush}"
					   HorizontalAlignment="Right"
					   VerticalAlignment="Center"
					   Margin="0,0,40,0"
					   ToolTip="Foto aufnehmen"
					   Visibility="{Binding SelectedCamera, RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Converter={x:Static local:PpsConverter.Visibility}}" />

		--><!--Button to open Camera settings--><!--
		<ToggleButton x:Name="CameraSettingsToggleButton"
					  Focusable="False"
					  Width="60" Height="60"
					  HorizontalAlignment="Right" VerticalAlignment="Top"
					  Margin="0,6,60,0"
					  ToolTip="Kameraeinstellungen">
			<ToggleButton.Template>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid x:Name="rootGrid">
						<Ellipse x:Name="circle" Fill="{StaticResource PpsPicturePaneBackgroundBrush}"/>
						<uiC:PpsGeometryImage x:Name="imageBox"
											  GeometryName="settings"
											  GeometryCircled="false"
											  Foreground="{StaticResource PPSnActionButtonBrush}"
											  Opacity=".65"
											  Width="48"
											  Height="48" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="rootGrid" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="imageBox" Property="Opacity" Value="1"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="circle" Property="Fill" Value="{StaticResource PPSnButtonPressedBrush}"/>
						</Trigger>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedCamera, Converter={StaticResource IsCameraSettingsEnabledConverter}}">
							<DataTrigger.Value>
								<sys:Boolean>false</sys:Boolean>
							</DataTrigger.Value>
							<Setter Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</ToggleButton.Template>
		</ToggleButton>

		--><!--this is the control for Camera Settings--><!--
		<Popup PlacementTarget="{Binding ElementName=CameraSettingsToggleButton}" Placement="Left" HorizontalOffset="60"
			   IsOpen="{Binding ElementName=CameraSettingsToggleButton, Path=IsChecked, Mode=TwoWay}" StaysOpen="False"
			   AllowsTransparency="True" PopupAnimation="Scroll"
			   uiC:PpsPopupBehavior.ForceFocus="True">
			<Border BorderThickness="1" BorderBrush="{StaticResource PpsPicturePaneBorderBrush}" Background="{StaticResource PpsPicturePaneBackgroundBrush}" Padding="12,4,12,12">
				<Grid TextBlock.Foreground="{StaticResource PPSnActionButtonBrush}">
					<Grid.RowDefinitions>
						<RowDefinition Height="auto"/>
						<RowDefinition Height="32"/>
						<RowDefinition Height="auto"/>
					</Grid.RowDefinitions>
					<TextBlock Grid.Row="0" Text="EINSTELLUNGEN" FontSize="16"/>
					<TextBlock Grid.Row="1" Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedCamera.Name, Mode=OneWay}" Margin="6,0,0,0"/>
					<ListBox Grid.Row="2"
							 ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedCamera.Properties}"
							 ItemContainerStyle="{StaticResource PPSnStrokeSettingsListBoxItemStyle}"
							 Style="{StaticResource PPSnListBoxStyle}"
							 Foreground="{StaticResource PPSnActionButtonBrush}">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<Border BorderBrush="{StaticResource PpsPicturePaneBorderBrush}" BorderThickness="1" CornerRadius="6" Padding="8,3" Margin="0,6,0,0">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition />
											<RowDefinition/>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="200"/>
											<ColumnDefinition/>
										</Grid.ColumnDefinitions>
										<TextBlock Grid.ColumnSpan="2" Grid.Row="0" Text="{Binding Name}"/>
										<Slider Grid.Column="0" Grid.Row="1" Minimum="{Binding MinValue}" Maximum="{Binding MaxValue}" Value="{Binding Value}"
												VerticalAlignment="Center" FocusVisualStyle="{x:Null}"/>
										<CheckBox Grid.Column="1" Grid.Row="1" IsChecked="{Binding AutomaticValue}" Content="Auto" FocusVisualStyle="{x:Null}"
												  Foreground="{StaticResource PPSnActionButtonBrush}" Margin="6,0,0,0" VerticalAlignment="Center"/>
									</Grid>
								</Border>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
					<Viewbox Grid.Row="0" Grid.RowSpan="2" Width="23" Height="23" VerticalAlignment="Top" HorizontalAlignment="Right" Opacity=".65"
							 ToolTip="Einige Kameraeinstellungen wurden manuell festgelegt.">
						<Canvas Width="24" Height="24">
							<Path Data="{StaticResource informationPathGeometry}" Fill="{StaticResource PPSnActionButtonBrush}"/>
						</Canvas>
						<Viewbox.Style>
							<Style TargetType="{x:Type Viewbox}">
								<Style.Triggers>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedCamera.AutomaticSettings}" Value="True">
										<Setter Property="Visibility" Value="Collapsed"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Viewbox.Style>
					</Viewbox>
				</Grid>
			</Border>
		</Popup>

		<Grid>
			<Image x:Name="CurrentObjectImageMax"
				   DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedAttachment, UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
				   Source="{Binding LinkedObject.DataLazy.RawData}">
				--><!-- RK: Image can handle byte[] as source --><!--
			</Image>
			<InkCanvas Cursor="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=InkEditCursor}"
					   Width="{Binding ElementName=CurrentObjectImageMax, Path=Source.Width}"
					   Height="{Binding ElementName=CurrentObjectImageMax, Path=Source.Height}"
					   UseCustomCursor="True"
					   Background="Transparent"
					   EditingMode="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=InkEditMode, Mode=OneWay}"
					   Strokes="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=InkStrokes, UpdateSourceTrigger=PropertyChanged}"
					   DefaultDrawingAttributes="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=InkDrawingAttributes, Mode=OneWay}">
				<InkCanvas.LayoutTransform>
					<MultiBinding Mode="OneWay" Converter="{StaticResource ScaleConverter}">
						<Binding ElementName="CurrentObjectImageMax" Path="ActualWidth"/>
						<Binding ElementName="CurrentObjectImageMax" Path="Source.Width"/>
					</MultiBinding>
				</InkCanvas.LayoutTransform>
			</InkCanvas>
			<Grid.Style>
				<Style TargetType="{x:Type Grid}">
					<Setter Property="Visibility" Value="Visible"/>
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedAttachment}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Hidden"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
		</Grid>

		<Border Grid.RowSpan="2" Margin="0,16,0,0"
				HorizontalAlignment="Right" VerticalAlignment="Top" Padding="3"
				Opacity="0.60"
				BorderThickness="1"
				BorderBrush="{StaticResource PpsPicturePaneBorderBrush}"
				Background="{StaticResource PpsPicturePaneBackgroundBrush}">
			<Border.Style>
				<Style TargetType="Border">
					<Setter Property="Visibility" Value="Visible"/>
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedAttachment}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Hidden"/>
						</DataTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.60" Duration="0:0:0.2"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</Style.Triggers>
				</Style>
			</Border.Style>

			<Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=StrokeSettings}">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto"/>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<ContentControl Grid.Row="0" Focusable="False">
					<ContentControl.Template>
						<ControlTemplate>
							<ControlTemplate.Resources>
								<Style TargetType="{x:Type uiC:PpsButton}" >
									<Setter Property="Foreground" Value="{StaticResource PPSnActionButtonBrush}" />
									<Setter Property="BorderThickness" Value="1" />
									<Setter Property="BorderBrush" Value="Transparent" />
									<Setter Property="Padding" Value="1" />
									<Setter Property="Margin" Value="3" />
									<Setter Property="Width" Value="30" />
									<Setter Property="Height" Value="30" />
									<Setter Property="DisplayMode" Value="Image" />
									<Setter Property="GeometrySize" Value="24" />
								</Style>
							</ControlTemplate.Resources>
							<Grid Margin="0,0,0,4">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<uiC:PpsButton x:Name="editButton"
											   Command="{x:Static local:PpsPicturePane.OverlayEditFreehandCommand}"
											   GeometryName="edit" />
								<uiC:PpsButton x:Name="cancelButton"
											   Command="{x:Static local:PpsPicturePane.OverlayCancelEditModeCommand}"
											   Grid.Column="1"
											   GeometryName="cursor" />
								<uiC:PpsButton x:Name="removeButton"
											   Command="{x:Static local:PpsPicturePane.OverlayRemoveStrokeCommand}"
											   Grid.Column="2"
											   GeometryName="eraser" />
							</Grid>
							<ControlTemplate.Triggers>
								<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=InkEditMode}" Value="{x:Static InkCanvasEditingMode.Ink}">
									<Setter TargetName="editButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}" />
									<Setter TargetName="editButton" Property="BorderThickness" Value="2" />
									<Setter TargetName="editButton" Property="Padding" Value="0" />
								</DataTrigger>
								<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=InkEditMode}" Value="{x:Static InkCanvasEditingMode.EraseByStroke}">
									<Setter TargetName="removeButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}" />
									<Setter TargetName="removeButton" Property="BorderThickness" Value="2" />
									<Setter TargetName="removeButton" Property="Padding" Value="0" />
								</DataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</ContentControl.Template>
				</ContentControl>

				<ListBox Grid.Row="1"
						 ItemsSource="{Binding Thicknesses}"
						 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=CurrentStrokeThickness, Mode=OneWay}"
						 Style="{StaticResource PPSnStrokeThicknessListBoxStyle}"/>
				<ListBox Grid.Row="2" Margin="0,3,0,0"
						 ItemsSource="{Binding Colors}"
						 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=CurrentStrokeColor, Mode=OneWay}"
						 Style="{StaticResource PPSnStrokeColorListBoxStyle}"/>
			</Grid>
		</Border>
		
		<ListBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=CameraEnum}"
				 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedCamera, Mode=OneWay}"
				 Style="{StaticResource PPSnListBoxStyle}"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
				 HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,16,0,0"
				 Focusable="False">
			<ListBox.ItemTemplate>
				<DataTemplate>
					<uiC:PpsButton x:Name="cameraButton"
								   Command="{x:Static local:PpsPicturePane.ChangeCameraCommand}" 
								   CommandParameter="{Binding}"
								   Focusable="False"
								   BorderBrush="{StaticResource PpsPicturePaneBorderBrush}"
								   Background="{StaticResource PpsPicturePaneBackgroundBrush}"
								   Width="170"
								   Padding="1,3"
								   HorizontalContentAlignment="Stretch"
								   VerticalContentAlignment="Stretch"
								   ToolTip="Diese Kamera auswählen">
						<uiC:PpsButton.Height>
							<MultiBinding Mode="OneWay" Converter="{StaticResource PreviewHeightConverter}">
								<Binding ElementName="cameraButton" Path="Width"/>
								<Binding Path="PreviewVideoRatio"/>
							</MultiBinding>
						</uiC:PpsButton.Height>
						<uiC:PpsButton.Content>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition Height="19"/>
								</Grid.RowDefinitions>
								<Image Source="{Binding Preview, TargetNullValue={x:Null}}"/>
								<Viewbox Grid.Row="0" Width="48" Height="48" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity=".65">
									<Canvas Width="24" Height="24">
										<Path Data="{StaticResource cameraPathGeometry}" Fill="WhiteSmoke"/>
									</Canvas>
								</Viewbox>
								<TextBlock Grid.Row="1" Text="{Binding Name}"
										   TextAlignment="Center" VerticalAlignment="Center"
										   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
							</Grid>
						</uiC:PpsButton.Content>
					</uiC:PpsButton>
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
							<Setter TargetName="cameraButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
							<Setter TargetName="cameraButton" Property="BorderThickness" Value="2"/>
							<Setter TargetName="cameraButton" Property="Padding" Value="0,2"/>
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ListBox.ItemTemplate>
			<ListBox.ItemContainerStyle>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="Margin" Value="0,0,0,16"/>
					<Setter Property="Focusable" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<ContentPresenter />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListBox.ItemContainerStyle>
		</ListBox>

		<Border x:Name="existingImagesPanel" Grid.Row="1" Height="{StaticResource PpsPicturePaneImagePanelHeight}" Padding="0,16,0,0">
			<ListBox x:Name="imagesList" 
					 ItemsSource="{Binding Source={StaticResource FilteredAttachments}}"
					 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:PpsPicturePane}}, Path=SelectedAttachment, Mode=OneWay}"
					 Style="{StaticResource PPSnListBoxStyle}"
					 ScrollViewer.VerticalScrollBarVisibility="Disabled"
					 Focusable="False">
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>
				<ListBox.ItemTemplate>
					<DataTemplate>
						<uiC:PpsButton x:Name="imageButton"
									   Command="{x:Static local:PpsPicturePane.EditOverlayCommand}" 
									   CommandParameter="{Binding}"
									   Focusable="False"
									   BorderBrush="{StaticResource PpsPicturePaneBorderBrush}"
									   Background="{StaticResource PpsPicturePaneBackgroundBrush}"
									   Width="170" 
									   Padding="1,3"
									   HorizontalContentAlignment="Stretch"
									   VerticalContentAlignment="Stretch">
							<uiC:PpsButton.Content>
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition Height="19"/>
									</Grid.RowDefinitions>
									<Image Source="{Binding Path=LinkedObject.DataLazy.PreviewImageLazy, Mode=OneWay}" />
									<TextBlock Grid.Row="1" Text="{Binding Path=Name}"
											   TextAlignment="Center" VerticalAlignment="Center"
											   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
									<uiC:PpsButton x:Name="removeButton"
												   Command="{x:Static ApplicationCommands.Delete}" CommandParameter="{Binding}"
												   DisplayMode="Circle" GeometryName="delete" GeometrySize="36"
												   Foreground="{StaticResource PPSnWindowForegroundBrush}"
												   Fill="{StaticResource PpsPicturePaneBackgroundBrush}"
												   HorizontalAlignment="Right"
												   VerticalAlignment="Top"
												   Margin="0,3,3,0"
												   Visibility="Hidden" />
								</Grid>
							</uiC:PpsButton.Content>
						</uiC:PpsButton>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
								<Setter TargetName="imageButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
								<Setter TargetName="imageButton" Property="BorderThickness" Value="2"/>
								<Setter TargetName="imageButton" Property="Padding" Value="0,2"/>
								<Setter TargetName="removeButton" Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ListBox.ItemTemplate>
				<ListBox.ItemContainerStyle>
					<Style TargetType="{x:Type ListBoxItem}">
						<Setter Property="Margin" Value="0,0,16,0"/>
						<Setter Property="Focusable" Value="False"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ListBoxItem}">
									<ContentPresenter />
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.ItemContainerStyle>
			</ListBox>
		</Border>

		<ToggleButton Width="170" Height="39" HorizontalAlignment="Left" VerticalAlignment="Bottom" ClickMode="Press" Focusable="False" >
			<ToggleButton.Triggers>
				<EventTrigger RoutedEvent="ToggleButton.Checked">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Height"
											 Storyboard.TargetName="existingImagesPanel"
											 To="0" 
											 Duration="0:0:0.25" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="ToggleButton.Unchecked">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Height"
											 Storyboard.TargetName="existingImagesPanel"
											 To="{StaticResource PpsPicturePaneImagePanelHeight}" 
											 Duration="0:0:0.25" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</ToggleButton.Triggers>

			<ToggleButton.Template>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="RootBorder" BorderBrush="{StaticResource PpsPicturePaneBorderBrush}" BorderThickness="1,1,1,1"
							Background="{StaticResource PpsPicturePaneBackgroundBrush}"
							SnapsToDevicePixels="True"
							CornerRadius="15,15,0,0">
						<Grid Margin="3,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="32"/>
								<ColumnDefinition/>
								<ColumnDefinition Width="32"/>
							</Grid.ColumnDefinitions>
							<uiC:PpsGeometryImage x:Name="chevronLeft"
												  GeometryName="goBack" GeometryCircled="false"
												  Foreground="{StaticResource PPSnActionButtonBrush}" Opacity=".65">
								<uiC:PpsGeometryImage.RenderTransform>
									<RotateTransform Angle="-90"/>
								</uiC:PpsGeometryImage.RenderTransform>
								<uiC:PpsGeometryImage.RenderTransformOrigin>
									<Point X="0.5" Y="0.5"/>
								</uiC:PpsGeometryImage.RenderTransformOrigin>
							</uiC:PpsGeometryImage>
							<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
								<uiC:PpsGeometryImage GeometryName="imageMultiple" GeometryCircled="false"
													  Foreground="{StaticResource PPSnActionButtonBrush}" Opacity=".65"
													  Width="20" Height="20" />
								<TextBlock Text="Bilderliste" Margin="4,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource PPSnActionButtonBrush}"/>
							</StackPanel>
							<uiC:PpsGeometryImage x:Name="chevronRight" Grid.Column="2"
												  GeometryName="goBack" GeometryCircled="false"
												  Foreground="{StaticResource PPSnActionButtonBrush}" Opacity=".65">
								<uiC:PpsGeometryImage.RenderTransform>
									<RotateTransform Angle="-90"/>
								</uiC:PpsGeometryImage.RenderTransform>
								<uiC:PpsGeometryImage.RenderTransformOrigin>
									<Point X="0.5" Y="0.5"/>
								</uiC:PpsGeometryImage.RenderTransformOrigin>
							</uiC:PpsGeometryImage>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="chevronLeft" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="180"/>
								</Setter.Value>
							</Setter>
							<Setter TargetName="chevronRight" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="180"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="RootBorder" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}" />
							<Setter TargetName="RootBorder" Property="Background" Value="{StaticResource PPSnMouseOverBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</ToggleButton.Template>
		</ToggleButton>
	</Grid>-->
</UserControl>