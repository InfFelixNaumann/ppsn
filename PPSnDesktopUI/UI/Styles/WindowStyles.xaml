<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	                xmlns:ui="clr-namespace:TecWare.PPSn.UI">

	<SolidColorBrush x:Key="PPSnWindowActiveHeaderBrush" Color="#EFEFF2" />
	<SolidColorBrush x:Key="PPSnWindowInactiveHeaderBrush" Color="#EFEFF2" />
	<SolidColorBrush x:Key="PPSnWindowBrush" Color="#EFEFF2" />
	<SolidColorBrush x:Key="PPSnWindowFooterBrush" Color="#007ACC" />
  <Color x:Key="PPSnWindowActiveGlowColor">#6DB8F2</Color>
  <Color x:Key="PPSnWindowInActiveGlowColor">#60728C</Color>
  
  <SolidColorBrush x:Key="PPSnWindowButtonPressedBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="PPSnWindowButtonHotdBrush" Color="#C8FFFFFF" />
	<SolidColorBrush x:Key="PPSnWindowButtonBorderBrush" Color="#60728C" />

	<Geometry x:Key="PpsWindowCloseButton">M 0.5,0.5L 9.5,9.5M 9.5,0.5L 0.5,9.5</Geometry>
	<Geometry x:Key="PpsWindowMaximizeButton">M 8.5,1.5L 0.5,1.5L 0.5,9.5L 8.5,9.5L 8.5,1.5 Z M 0.5,9.5L 0.5,3.27777L 8.5,3.27777L 8.5,9.5L 0.5,9.5 Z</Geometry>
	<Geometry x:Key="PpsWindowRestoreButton">M 0.5,9.5L 0.5,4.5L 0.5,9.5L 7.5,9.5L 7.5,3.5L 0.5,3.5L 0.5,4.5L 7.5,4.5L 7.5,9.5L 0.5,9.5M 3.5,1.5L 9.5,1.5L 9.5,7.5L 9.5,1.5L 3.5,1.5</Geometry>

	<Style x:Key="PpsWindowButton" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Width" Value="34" />
		<Setter Property="Height" Value="26" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="PART_border" BorderBrush="Transparent" BorderThickness="0,0,0,0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ContentPresenter SnapsToDevicePixels="True" MaxHeight="10" MaxWidth="10" HorizontalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_border" Property="Background" Value="{StaticResource PPSnWindowButtonHotdBrush}" />
							<!--<Setter TargetName="PART_border" Property="BorderBrush" Value="{StaticResource PPSnWindowButtonBorderBrush}" />-->
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="PART_border" Property="Background" Value="{StaticResource PPSnWindowButtonPressedBrush}"/>
							<!--<Setter TargetName="PART_border" Property="BorderBrush" Value="{StaticResource PPSnWindowButtonBorderBrush}" />-->
							<Setter Property="Foreground" Value="#FFF"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PpsToolBarButton" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="PART_Border" Value="{StaticResource PPSnWindowButtonHotdBrush}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="PART_Border" Value="{StaticResource PPSnWindowButtonPressedBrush}"/>
							<Setter Property="Foreground" Value="#FFF"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PpsWindow" TargetType="{x:Type ui:PpsWindow}">
		<Setter Property="WindowStyle" Value="SingleBorderWindow"/>
		<Setter Property="ResizeMode" Value="CanResize"/>
		<Setter Property="ActiveGlowColor" Value="{StaticResource PPSnWindowActiveGlowColor}"/>
		<Setter Property="InactiveGlowColor" Value="{StaticResource PPSnWindowInActiveGlowColor}"/>
	</Style>

</ResourceDictionary>