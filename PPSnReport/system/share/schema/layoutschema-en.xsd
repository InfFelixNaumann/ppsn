<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file. Auto generated from commands.xml with sphelper. -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="urn:speedata.de:2009/publisher/en" xmlns:en="urn:speedata.de:2009/publisher/en">
  <xs:element name="A">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Insert hyperlink to a URL.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Value"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="href" use="required">
        <xs:annotation>
          <xs:documentation>The destination of the hyperlink (URI). Example: https://www.speedata.de</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Action">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Associates an action with a text. Once the text is placed on the page, the associated action will be executed. The action can be compared to an invisible character. When the publisher outputs the character, the corresponding instructions will be run.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Mark"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AddSearchpath">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>The path to be added. System dependent.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AtPageCreation">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>The contents of the element AtPageCreation is executed the first time the page is accessed. This is used in Pagetype.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:AddSearchpath"/>
            <xs:element ref="en:Bookmark"/>
            <xs:element ref="en:DefineColor"/>
            <xs:element ref="en:DefineFontfamily"/>
            <xs:element ref="en:DefineFontalias"/>
            <xs:element ref="en:DefineTextformat"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Group"/>
            <xs:element ref="en:Hyphenation"/>
            <xs:element ref="en:Include"/>
            <xs:element ref="en:InsertPages"/>
            <xs:element ref="en:Layout"/>
            <xs:element ref="en:LoadDataset"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Message"/>
            <xs:element ref="en:NewPage"/>
            <xs:element ref="en:NextFrame"/>
            <xs:element ref="en:NextRow"/>
            <xs:element ref="en:Output"/>
            <xs:element ref="en:Pagetype"/>
            <xs:element ref="en:PlaceObject"/>
            <xs:element ref="en:ProcessNode"/>
            <xs:element ref="en:SaveDataset"/>
            <xs:element ref="en:SavePages"/>
            <xs:element ref="en:SetVariable"/>
            <xs:element ref="en:SortSequence"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Until"/>
            <xs:element ref="en:While"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AtPageShipout">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>The enclosed instructions will be executed when the page is placed into the PDF file. Used in Pagetype.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:AddSearchpath"/>
            <xs:element ref="en:Bookmark"/>
            <xs:element ref="en:DefineColor"/>
            <xs:element ref="en:DefineFontfamily"/>
            <xs:element ref="en:DefineFontalias"/>
            <xs:element ref="en:DefineTextformat"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Group"/>
            <xs:element ref="en:Hyphenation"/>
            <xs:element ref="en:Include"/>
            <xs:element ref="en:InsertPages"/>
            <xs:element ref="en:Layout"/>
            <xs:element ref="en:LoadDataset"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Message"/>
            <xs:element ref="en:NewPage"/>
            <xs:element ref="en:NextFrame"/>
            <xs:element ref="en:NextRow"/>
            <xs:element ref="en:Output"/>
            <xs:element ref="en:Pagetype"/>
            <xs:element ref="en:PlaceObject"/>
            <xs:element ref="en:ProcessNode"/>
            <xs:element ref="en:SaveDataset"/>
            <xs:element ref="en:SavePages"/>
            <xs:element ref="en:SetVariable"/>
            <xs:element ref="en:SortSequence"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Until"/>
            <xs:element ref="en:While"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="AttachFile">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="filename" use="required">
        <xs:annotation>
          <xs:documentation>The name of the local file to be attached to the PDF.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="description" use="required">
        <xs:annotation>
          <xs:documentation>Textual description of the attached file (for the PDF viewer).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="type" use="required">
        <xs:annotation>
          <xs:documentation>The type of the included file. Currently only ZUGFeRD is supported.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="ZUGFeRD invoice">
              <xs:annotation>
                <xs:documentation>The attached file is an XML file containing a ZUGFeRD invoice</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Attribute">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>Name of the attribute that is created.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>The contents of the attribute</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="B">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Switch to font weight »bold«</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Barcode">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>The data to be encoded in the barcode.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fontface">
        <xs:annotation>
          <xs:documentation>Name of the font of the text that can be placed beneath the barcode. Not used in all codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="type" use="required">
        <xs:annotation>
          <xs:documentation>Type of the barcode. One of EAN13, Code128 or QRCode.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="QRCode">
              <xs:annotation>
                <xs:documentation>Create an »optimal« QR code in terms of error correction and size.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Code128">
              <xs:annotation>
                <xs:documentation>Generate a code 128 barcode for numbers and text.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EAN13">
              <xs:annotation>
                <xs:documentation>Create an EAN13 barcode for 13 digits.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="width">
        <xs:annotation>
          <xs:documentation>Width of the barcode</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="height">
        <xs:annotation>
          <xs:documentation>Height of the barcode.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="showtext">
        <xs:annotation>
          <xs:documentation>Should the text be written under the barcode?</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Write text beneath the barcode.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't display text.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="overshoot">
        <xs:annotation>
          <xs:documentation>The factor denoting the extra length of the outer and middle bar. Only useful with EAN13.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="eclevel">
        <xs:annotation>
          <xs:documentation>Set the error correction level for QR-codes. If not provided, the system uses the maximum level for minimum size. The higher the level, the more error correction is in the QR-code.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="L">
              <xs:annotation>
                <xs:documentation>Set the lowest level (1) with approx. 7% recovery.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="M">
              <xs:annotation>
                <xs:documentation>Set the second lowest level (2) with approx. 15% recovery.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Q">
              <xs:annotation>
                <xs:documentation>Set the second highest level (3) with approx. 25% recovery.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="H">
              <xs:annotation>
                <xs:documentation>Set the highest level (4) with approx. 35% recovery.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Bold">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="fontface" use="required">
        <xs:annotation>
          <xs:documentation>Name of the font for bold.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="BoldItalic">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="fontface" use="required">
        <xs:annotation>
          <xs:documentation>Name of the font for bold italic.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Bookmark">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>Title of the bookmark</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="level" use="required">
        <xs:annotation>
          <xs:documentation>1 is the top level, 2 is the next level, etc.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="open">
        <xs:annotation>
          <xs:documentation>If yes, the child elements are shown. If no, the child elements are hidden.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Show children.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Hide children.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Box">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="backgroundcolor">
        <xs:annotation>
          <xs:documentation>Color of the box. If the color name is a dash (-), a transparent background is used.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="bleed">
        <xs:annotation>
          <xs:documentation>Lets the box increase its size by the amount of trim given in the options. Useful for thumb indexes. The contents of the attribute is either »left«, »right«, »top« or »bottom« or any combination such as »top,right«.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="top">
              <xs:annotation>
                <xs:documentation>Increase the size to the top.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="left">
              <xs:annotation>
                <xs:documentation>Increase the size to the left.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom">
              <xs:annotation>
                <xs:documentation>Increase the size to the bottom.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="right">
              <xs:annotation>
                <xs:documentation>Increase the size to the right.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="top,left">
              <xs:annotation>
                <xs:documentation>Increase the size to the top and left.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="top,right">
              <xs:annotation>
                <xs:documentation>Increase the size to the top and right.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom,left">
              <xs:annotation>
                <xs:documentation>Increase the size to the bottom and left.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom,right">
              <xs:annotation>
                <xs:documentation>Increase the size to the bottom and right.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="class">
        <xs:annotation>
          <xs:documentation>CSS class for this box.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="height" use="required">
        <xs:annotation>
          <xs:documentation>Height of the box in grid cells.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id">
        <xs:annotation>
          <xs:documentation>CSS id for this box.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-top">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the top edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-bottom">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the bottom edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-left">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the left edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-right">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the right edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="width" use="required">
        <xs:annotation>
          <xs:documentation>Width of the box in grid cells or in absolute values.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Br">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Case">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Part of a Switch construct. All cases up to the first case which evaluates to »true« will be executed. If no cases match and there is a Otherwise, this will be executed instead.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:AddSearchpath"/>
            <xs:element ref="en:Attribute"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Barcode"/>
            <xs:element ref="en:Bookmark"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Column"/>
            <xs:element ref="en:Columns"/>
            <xs:element ref="en:Copy-of"/>
            <xs:element ref="en:DefineColor"/>
            <xs:element ref="en:DefineFontfamily"/>
            <xs:element ref="en:DefineFontalias"/>
            <xs:element ref="en:DefineTextformat"/>
            <xs:element ref="en:Element"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:Group"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:Hyphenation"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Initial"/>
            <xs:element ref="en:Include"/>
            <xs:element ref="en:InsertPages"/>
            <xs:element ref="en:Layout"/>
            <xs:element ref="en:Li"/>
            <xs:element ref="en:LoadDataset"/>
            <xs:element ref="en:LoadFontfile"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Message"/>
            <xs:element ref="en:NewPage"/>
            <xs:element ref="en:NextFrame"/>
            <xs:element ref="en:NextRow"/>
            <xs:element ref="en:Options"/>
            <xs:element ref="en:Output"/>
            <xs:element ref="en:Pageformat"/>
            <xs:element ref="en:Paragraph"/>
            <xs:element ref="en:PlaceObject"/>
            <xs:element ref="en:PositioningArea"/>
            <xs:element ref="en:PositioningFrame"/>
            <xs:element ref="en:ProcessNode"/>
            <xs:element ref="en:SaveDataset"/>
            <xs:element ref="en:SavePages"/>
            <xs:element ref="en:SetGrid"/>
            <xs:element ref="en:SetVariable"/>
            <xs:element ref="en:SortSequence"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Table"/>
            <xs:element ref="en:Tablehead"/>
            <xs:element ref="en:Tablerule"/>
            <xs:element ref="en:Td"/>
            <xs:element ref="en:Tr"/>
            <xs:element ref="en:Trace"/>
            <xs:element ref="en:Until"/>
            <xs:element ref="en:Value"/>
            <xs:element ref="en:While"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="test" use="required">
        <xs:annotation>
          <xs:documentation>The test that gets evaluated.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Circle">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="radiusx" use="required">
        <xs:annotation>
          <xs:documentation>Radius of the circle in grid cells (horizontal) or as an absolute length. In the future, a radiusy will allow to create an ellipse.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="backgroundcolor">
        <xs:annotation>
          <xs:documentation>Color of the circle.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="framecolor">
        <xs:annotation>
          <xs:documentation>Color of the circle line.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="rulewidth">
        <xs:annotation>
          <xs:documentation>The thickness of the border that is drawn around the object.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="class">
        <xs:annotation>
          <xs:documentation>CSS class for the circle.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id">
        <xs:annotation>
          <xs:documentation>CSS id for this circle.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Color">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Switch to another text color</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>The name of the color. Must be pre-defined with DefineColor.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Column">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="width">
        <xs:annotation>
          <xs:documentation>Width of the column. Argument can be a number (in grid cells) a length (e.g. 2cm) or a *-number (e.g. 4*).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="align">
        <xs:annotation>
          <xs:documentation>The horizontal alignment of the table cells in this column. Can be overridden in a cell (Td).</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="left">
              <xs:annotation>
                <xs:documentation>The table cells are left aligned.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="center">
              <xs:annotation>
                <xs:documentation>The table cells are horizontally centerd.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="right">
              <xs:annotation>
                <xs:documentation>The table cells are right aligned.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="valign">
        <xs:annotation>
          <xs:documentation>The vertical alignment of the cells in this column. Can be overridden in a cell (Td).</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="top">
              <xs:annotation>
                <xs:documentation>The table cells are top aligned.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="middle">
              <xs:annotation>
                <xs:documentation>The table cells are vertically centered.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom">
              <xs:annotation>
                <xs:documentation>The table cells are aligned at the bottom.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="backgroundcolor">
        <xs:annotation>
          <xs:documentation>All cells in this column have this background color.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-left">
        <xs:annotation>
          <xs:documentation>Set the left padding for the column</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-right">
        <xs:annotation>
          <xs:documentation>Set the right padding for the column</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Columns">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Set the widths and other properties of the columns in a table.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Column"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Compatibility">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="movecursoronplaceobject">
        <xs:annotation>
          <xs:documentation>Switch the behavior where objects at the right page margin used in PlaceObject puts the cursor in #columns + 1.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>New behavior (default): set cursor in column 1 when an object goes to the right margin.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Old behavior: set the cursor to the column + 1 past the right edge of the placed object.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Contents">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Marks the contents of a Group, a virtual area.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:AddSearchpath"/>
            <xs:element ref="en:Bookmark"/>
            <xs:element ref="en:DefineColor"/>
            <xs:element ref="en:DefineFontfamily"/>
            <xs:element ref="en:DefineFontalias"/>
            <xs:element ref="en:DefineTextformat"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Group"/>
            <xs:element ref="en:Hyphenation"/>
            <xs:element ref="en:Include"/>
            <xs:element ref="en:InsertPages"/>
            <xs:element ref="en:Layout"/>
            <xs:element ref="en:LoadDataset"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Message"/>
            <xs:element ref="en:NewPage"/>
            <xs:element ref="en:NextFrame"/>
            <xs:element ref="en:NextRow"/>
            <xs:element ref="en:Output"/>
            <xs:element ref="en:Pagetype"/>
            <xs:element ref="en:PlaceObject"/>
            <xs:element ref="en:ProcessNode"/>
            <xs:element ref="en:SaveDataset"/>
            <xs:element ref="en:SavePages"/>
            <xs:element ref="en:SetVariable"/>
            <xs:element ref="en:SortSequence"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Until"/>
            <xs:element ref="en:While"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Copy-of">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>The selection (most likely a variable) that is to be copied.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DefineColor">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="model">
        <xs:annotation>
          <xs:documentation>Color model to be used for the color. Currently “rgb”, “cmyk”, “gray” and “spotcolor” are supported.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="cmyk">
              <xs:annotation>
                <xs:documentation>CMYK (cyan, magenta, yellow, key/black)</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rgb">
              <xs:annotation>
                <xs:documentation>RGB (red, green, blue)</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="gray">
              <xs:annotation>
                <xs:documentation>Gray (0=Black)</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="spotcolor">
              <xs:annotation>
                <xs:documentation>Use a PANTONE or HKS color.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>The name of the color to be defined.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="r">
        <xs:annotation>
          <xs:documentation>Red part with RGB</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="g">
        <xs:annotation>
          <xs:documentation>Green part with RGB / gray part when using the model gray</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="b">
        <xs:annotation>
          <xs:documentation>Blue part with RGB</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="c">
        <xs:annotation>
          <xs:documentation>Cyan part with CMYK</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="m">
        <xs:annotation>
          <xs:documentation>Magenta part with CMYK</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="y">
        <xs:annotation>
          <xs:documentation>Yellow part with CMYK</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="k">
        <xs:annotation>
          <xs:documentation>Black part with CMYK</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="colorname">
        <xs:annotation>
          <xs:documentation>The name of the spot color if model is »spotcolor«. The name must match the required color name, such as »PANTONE 116 C«.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="overprint">
        <xs:annotation>
          <xs:documentation>Enable overprint for this color.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Enable overprint for this color.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Disable overprint for this color (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="value">
        <xs:annotation>
          <xs:documentation>Hex value of the color, such as #FA5 or #FFAA55.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DefineFontalias">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="existing" use="required">
        <xs:annotation>
          <xs:documentation>The name of the existing font family.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="alias" use="required">
        <xs:annotation>
          <xs:documentation>New (equivalent) name of the font</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DefineFontfamily">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Regular"/>
          <xs:element ref="en:Italic"/>
          <xs:element ref="en:Bold"/>
          <xs:element ref="en:BoldItalic"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>The symbolic name that is used as a reference to access this font family.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fontsize" use="required">
        <xs:annotation>
          <xs:documentation>Font size in pt (PostScript points). Number without unit.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="leading" use="required">
        <xs:annotation>
          <xs:documentation>Distance between two baselines in pt (PostScript points). Without unit.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DefineTextformat">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="hyphenchar">
        <xs:annotation>
          <xs:documentation>The character used for hyphenation (default: -)</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="orphan">
        <xs:annotation>
          <xs:documentation>If no, prohibit orphans (first line of paragraph is on the previous page). Default: no.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Allow orphans.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Prevent orphans (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="widow">
        <xs:annotation>
          <xs:documentation>If no, prohibit widows (last line of paragraph is on the next page). Default: no.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Allow widows.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Prevent widows (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>Name of the textformat that is used later in the layout.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="alignment">
        <xs:annotation>
          <xs:documentation>Determines the formatting of the text.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="justified">
              <xs:annotation>
                <xs:documentation>Textblock has a rectangular shape.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="leftaligned">
              <xs:annotation>
                <xs:documentation>The text is ragged at the right margin.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="rightaligned">
              <xs:annotation>
                <xs:documentation>The text is ragged right at the left margin.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="centered">
              <xs:annotation>
                <xs:documentation>The text is ragged at the left and the right margin.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="indentation">
        <xs:annotation>
          <xs:documentation>The amount of indentation.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="rows">
        <xs:annotation>
          <xs:documentation>The number of rows with indentation given in the attribute indentation. If the number is negative, this determines the number of rows that are not indented.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-top">
        <xs:annotation>
          <xs:documentation>The thickness of the rule above the text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-bottom">
        <xs:annotation>
          <xs:documentation>The thickness of the rule below the text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="margin-bottom">
        <xs:annotation>
          <xs:documentation>Distance between the bottom rule and the text of the next paragraph.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="break-below">
        <xs:annotation>
          <xs:documentation>(Dis-)Allow break below the text. This only works if the following text is placed within the same PlaceObject or Output container.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Allow a break below this text (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Prevent a page break below this text.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="padding-top">
        <xs:annotation>
          <xs:documentation>Distance between the top of the text and the top rule.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="margin-top">
        <xs:annotation>
          <xs:documentation>Distance between the top rule and the text of the previous paragraph.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="hyphenate">
        <xs:annotation>
          <xs:documentation>Enable or disable hyphenation (default: on).</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Enable hyphenation (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Disable hyphenation.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="tab">
        <xs:annotation>
          <xs:documentation>What to do on the tab (&amp; #09;) character.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="space">
              <xs:annotation>
                <xs:documentation>Use tab as space</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="hspace">
              <xs:annotation>
                <xs:documentation>Use tab as a stretching space</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Element">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Attribute"/>
          <xs:element ref="en:Copy-of"/>
          <xs:element ref="en:Element"/>
          <xs:element ref="en:ForAll"/>
          <xs:element ref="en:Makeindex"/>
          <xs:element ref="en:Switch"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>Name of the element that gets created.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Fontface">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Switch to another font family.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="fontfamily" use="required">
        <xs:annotation>
          <xs:documentation>The name of the font family to switch to.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ForAll">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Action"/>
          <xs:element ref="en:AddSearchpath"/>
          <xs:element ref="en:Attribute"/>
          <xs:element ref="en:B"/>
          <xs:element ref="en:Barcode"/>
          <xs:element ref="en:Bookmark"/>
          <xs:element ref="en:Br"/>
          <xs:element ref="en:Column"/>
          <xs:element ref="en:Columns"/>
          <xs:element ref="en:Copy-of"/>
          <xs:element ref="en:DefineColor"/>
          <xs:element ref="en:DefineFontfamily"/>
          <xs:element ref="en:DefineFontalias"/>
          <xs:element ref="en:DefineTextformat"/>
          <xs:element ref="en:Element"/>
          <xs:element ref="en:Fontface"/>
          <xs:element ref="en:ForAll"/>
          <xs:element ref="en:Frame"/>
          <xs:element ref="en:Group"/>
          <xs:element ref="en:HSpace"/>
          <xs:element ref="en:Hyphenation"/>
          <xs:element ref="en:I"/>
          <xs:element ref="en:Image"/>
          <xs:element ref="en:Initial"/>
          <xs:element ref="en:Include"/>
          <xs:element ref="en:InsertPages"/>
          <xs:element ref="en:Layout"/>
          <xs:element ref="en:Li"/>
          <xs:element ref="en:LoadDataset"/>
          <xs:element ref="en:LoadFontfile"/>
          <xs:element ref="en:Loop"/>
          <xs:element ref="en:Message"/>
          <xs:element ref="en:NewPage"/>
          <xs:element ref="en:NextFrame"/>
          <xs:element ref="en:NextRow"/>
          <xs:element ref="en:Options"/>
          <xs:element ref="en:Output"/>
          <xs:element ref="en:Pageformat"/>
          <xs:element ref="en:Paragraph"/>
          <xs:element ref="en:PlaceObject"/>
          <xs:element ref="en:PositioningArea"/>
          <xs:element ref="en:PositioningFrame"/>
          <xs:element ref="en:ProcessNode"/>
          <xs:element ref="en:SaveDataset"/>
          <xs:element ref="en:SavePages"/>
          <xs:element ref="en:SetGrid"/>
          <xs:element ref="en:SetVariable"/>
          <xs:element ref="en:SortSequence"/>
          <xs:element ref="en:Sub"/>
          <xs:element ref="en:Sup"/>
          <xs:element ref="en:Switch"/>
          <xs:element ref="en:Table"/>
          <xs:element ref="en:Tablehead"/>
          <xs:element ref="en:Tablerule"/>
          <xs:element ref="en:Td"/>
          <xs:element ref="en:Tr"/>
          <xs:element ref="en:Trace"/>
          <xs:element ref="en:Until"/>
          <xs:element ref="en:Value"/>
          <xs:element ref="en:While"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>Selects the child elements from the data XML</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="limit">
        <xs:annotation>
          <xs:documentation>Limits the number of children to the given number.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="start">
        <xs:annotation>
          <xs:documentation>The first entry to process. Default is 1.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Frame">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Image"/>
          <xs:element ref="en:Box"/>
          <xs:element ref="en:Circle"/>
          <xs:element ref="en:Rule"/>
          <xs:element ref="en:Textblock"/>
          <xs:element ref="en:Barcode"/>
          <xs:element ref="en:Table"/>
          <xs:element ref="en:Transformation"/>
          <xs:element ref="en:Frame"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="border-bottom-right-radius">
        <xs:annotation>
          <xs:documentation>Radius of corner bottom right.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-top-right-radius">
        <xs:annotation>
          <xs:documentation>Radius of corner top right.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-top-left-radius">
        <xs:annotation>
          <xs:documentation>Radius of corner top left.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-bottom-left-radius">
        <xs:annotation>
          <xs:documentation>Radius of corner bottom left.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="framecolor">
        <xs:annotation>
          <xs:documentation>The color of the frame around the object. Only makes sense in combination with the attribute 'frame'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="backgroundcolor">
        <xs:annotation>
          <xs:documentation>Color of the background if ›background‹ is set to ›full‹.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="rulewidth">
        <xs:annotation>
          <xs:documentation>The thickness of the frame that is drawn around the object. Only makes sense in combination with the attribute 'frame'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="class">
        <xs:annotation>
          <xs:documentation>CSS class for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id">
        <xs:annotation>
          <xs:documentation>CSS id for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Grid">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="width">
        <xs:annotation>
          <xs:documentation>Set the width of a grid cell.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="height">
        <xs:annotation>
          <xs:documentation>Height of a grid cell.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="nx">
        <xs:annotation>
          <xs:documentation>Number of grid cells in horizontal direction.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="ny">
        <xs:annotation>
          <xs:documentation>Number of grid cells in vertical direction.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="dx">
        <xs:annotation>
          <xs:documentation>Distance between two grid cells (horizontal)</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="dy">
        <xs:annotation>
          <xs:documentation>Distance between two grid cells (horizontal)</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Group">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Contents"/>
          <xs:element ref="en:Grid"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>Name of the group that is created.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Groupcontents">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>The name of the group</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Hyphenation">
    <xs:complexType mixed="true">
      <xs:group ref="en:foreign-nodes"/>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="HSpace">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="width">
        <xs:annotation>
          <xs:documentation>Optional width of the space (a length).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="leader">
        <xs:annotation>
          <xs:documentation>The text that should be displayed instead of the space. For example a dot (.).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="leader-width">
        <xs:annotation>
          <xs:documentation>Distance between two leader text starting points</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="I">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Switch to italic text.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Include">
    <xs:annotation>
      <xs:documentation>Toplevel element for included layout files.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence maxOccurs="unbounded">
        <xs:element minOccurs="0" ref="en:DefineColor"/>
        <xs:element minOccurs="0" ref="en:DefineFontalias"/>
        <xs:element minOccurs="0" ref="en:DefineFontfamily"/>
        <xs:element minOccurs="0" ref="en:DefineTextformat"/>
        <xs:element minOccurs="0" ref="en:Hyphenation"/>
        <xs:element minOccurs="0" ref="en:LoadFontfile"/>
        <xs:element minOccurs="0" ref="en:Options"/>
        <xs:element minOccurs="0" ref="en:Pageformat"/>
        <xs:element minOccurs="0" ref="en:Pagetype"/>
        <xs:element minOccurs="0" ref="en:Record"/>
        <xs:element minOccurs="0" ref="en:SetGrid"/>
        <xs:element minOccurs="0" ref="en:SetVariable"/>
        <xs:element minOccurs="0" ref="en:Stylesheet"/>
        <xs:element minOccurs="0" ref="en:Switch"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Initial">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Make some letters appear in a larger font at the beginning of the paragraph.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Value"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="color">
        <xs:annotation>
          <xs:documentation>Set the color of the initial. Defaults to black.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fontface" use="required">
        <xs:annotation>
          <xs:documentation>Choose the font family. Only »Regular« shape is used at the moment.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-left">
        <xs:annotation>
          <xs:documentation>Insert space left of the initial.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-right">
        <xs:annotation>
          <xs:documentation>Insert space right of the initial.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="InsertPages">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>The name of the saved pages.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Image">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="bleed">
        <xs:annotation>
          <xs:documentation>Should the image size increase by the amount of bleed setting (Options)?</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="auto">
              <xs:annotation>
                <xs:documentation>If the image touches a paper edge, extend the image in that direction.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Do not extend the image.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="class">
        <xs:annotation>
          <xs:documentation>CSS class for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id">
        <xs:annotation>
          <xs:documentation>CSS id for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="width">
        <xs:annotation>
          <xs:documentation>Image width. One of 'auto' (default, take image width), '100%' (whole area width), length (such as '3cm') or number (in grid cells).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="height">
        <xs:annotation>
          <xs:documentation>Image height. One of 'auto' (default, take image width), length (such as '3cm') or number (in grid cells).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="href">
        <xs:annotation>
          <xs:documentation>An URL (http:// or file:) of the image. If external, it will be downloaded and cached in TEMPDIR/sp/images (which can be configured by setting the configuration file key imagecache). Alternative to ›file‹. When file: is used as a protocol, it can be a relative path. If no protocol is given, file: is assumed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="file">
        <xs:annotation>
          <xs:documentation>Filename of the image. Can be a file in the search path or a file-URI for absolute paths (e.g. file:///path/to/image.pdf).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fallback">
        <xs:annotation>
          <xs:documentation>The filename of the replacement image if the file is not found. If none given, a red 'file not found' image will gets displayed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="page">
        <xs:annotation>
          <xs:documentation>The page number from the PDF. Default is 1 (include the first page).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="maxwidth">
        <xs:annotation>
          <xs:documentation>The maximum width of the image. Only used when clip="no". Value is a number (grid cells), a length or the value »100%« for full width image.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="maxheight">
        <xs:annotation>
          <xs:documentation>The maximum height of the image. Only used when clip="no". Value is a number (grid cells) or a length.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="visiblebox">
        <xs:annotation>
          <xs:documentation>The PDF box that represents the visible area of the included image. Default is “cropbox”.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="artbox">
              <xs:annotation>
                <xs:documentation>Use the artbox as the visible area. The artbox is usually not contained in a PDF.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bleedbox">
              <xs:annotation>
                <xs:documentation>Use the bleedbox of the included PDF.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cropbox">
              <xs:annotation>
                <xs:documentation>Use the cropbox of the included PDF (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="mediabox">
              <xs:annotation>
                <xs:documentation>Use the mediabox of the included PDF. This is the largest box.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="trimbox">
              <xs:annotation>
                <xs:documentation>Use the trimbox of the includes PDF. The trimbox is the final paper size. For example, the trim box of an A4 PDF is 210mm x 297mm.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="clip">
        <xs:annotation>
          <xs:documentation>When yes, the image keeps its aspect ratio if both width and hight is given. To be able to fit the image into the given dimensions, the image gets clipped.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Keep the aspect ratio and cut off left/right or top/bottom edges.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Distort the image to make it fit in the given area.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="minwidth">
        <xs:annotation>
          <xs:documentation>The minimum width of the image. Only used when clip="no". Value is a number (grid cells), a length or the value »100%« for full width image.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="minheight">
        <xs:annotation>
          <xs:documentation>The minimum height of the image. Only used when clip="no". Value is a number (grid cells) or a length.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="dpiwarn">
        <xs:annotation>
          <xs:documentation>Warn if the image gets lower resolution than given.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding">
        <xs:annotation>
          <xs:documentation>Set padding for all four sides.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-top">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the top edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-bottom">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the bottom edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-left">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the left edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-right">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the right edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="rotate">
        <xs:annotation>
          <xs:documentation>Rotate the image in steps of 90°. The amount of movement is defined by the specified angle; if positive, the movement will be clockwise, if negative, it will be counter-clockwise.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Italic">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="fontface" use="required">
        <xs:annotation>
          <xs:documentation>The name of the fontface.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="LoadDataset">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>Name of the data file. Example: toc</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="LoadFontfile">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>The internal name of the font file. To be used within DefineFontfamily.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="filename" use="required">
        <xs:annotation>
          <xs:documentation>The name (with extension) of the font file.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="space">
        <xs:annotation>
          <xs:documentation>The natural width between words. Can be stretched by 30% and shrunk by 10%. Defaults to 25. The value is a percentile of the font size.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="marginprotrusion">
        <xs:annotation>
          <xs:documentation>The amount of protrusion glyphs like -, . and - stick into the right margin. Highly font dependent. Defaults to 0.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="smallcaps">
        <xs:annotation>
          <xs:documentation>Use small caps glyphs when the font supplies them.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Use small caps for this font.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't switch to small caps (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="oldstylefigures">
        <xs:annotation>
          <xs:documentation>Use oldstyle figures if the font includes them. (OpenType feature »onum«)</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Use oldstyle figures.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Use lining figures.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Layout">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>This command is the root element in the Layout instructions.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:AttachFile"/>
            <xs:element ref="en:AddSearchpath"/>
            <xs:element ref="en:Compatibility"/>
            <xs:element ref="en:DefineColor"/>
            <xs:element ref="en:DefineFontalias"/>
            <xs:element ref="en:DefineFontfamily"/>
            <xs:element ref="en:DefineTextformat"/>
            <xs:element ref="en:Hyphenation"/>
            <xs:element ref="en:LoadFontfile"/>
            <xs:element ref="en:Options"/>
            <xs:element ref="en:Pageformat"/>
            <xs:element ref="en:Pagetype"/>
            <xs:element ref="en:PDFOptions"/>
            <xs:element ref="en:Record"/>
            <xs:element ref="en:SetGrid"/>
            <xs:element ref="en:SetVariable"/>
            <xs:element ref="en:Stylesheet"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Trace"/>
            <xs:element ref="en:Layout"/>
            <xs:element ref="en:Include"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="version">
        <xs:annotation>
          <xs:documentation>Minimum publisher version required. If major or minor version differ, give a warning. Format: 1.6.12 (revision number can be left out).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="name">
        <xs:annotation>
          <xs:documentation>A name for the layout. Optional, without any influence on the layout itself.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Li">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>List item in an ordered or unordered list.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Loop">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Action"/>
          <xs:element ref="en:AddSearchpath"/>
          <xs:element ref="en:Attribute"/>
          <xs:element ref="en:B"/>
          <xs:element ref="en:Barcode"/>
          <xs:element ref="en:Bookmark"/>
          <xs:element ref="en:Br"/>
          <xs:element ref="en:Column"/>
          <xs:element ref="en:Columns"/>
          <xs:element ref="en:Copy-of"/>
          <xs:element ref="en:DefineColor"/>
          <xs:element ref="en:DefineFontfamily"/>
          <xs:element ref="en:DefineFontalias"/>
          <xs:element ref="en:DefineTextformat"/>
          <xs:element ref="en:Element"/>
          <xs:element ref="en:Fontface"/>
          <xs:element ref="en:ForAll"/>
          <xs:element ref="en:Frame"/>
          <xs:element ref="en:Group"/>
          <xs:element ref="en:HSpace"/>
          <xs:element ref="en:Hyphenation"/>
          <xs:element ref="en:I"/>
          <xs:element ref="en:Image"/>
          <xs:element ref="en:Initial"/>
          <xs:element ref="en:Include"/>
          <xs:element ref="en:InsertPages"/>
          <xs:element ref="en:Layout"/>
          <xs:element ref="en:Li"/>
          <xs:element ref="en:LoadDataset"/>
          <xs:element ref="en:LoadFontfile"/>
          <xs:element ref="en:Loop"/>
          <xs:element ref="en:Message"/>
          <xs:element ref="en:NewPage"/>
          <xs:element ref="en:NextFrame"/>
          <xs:element ref="en:NextRow"/>
          <xs:element ref="en:Options"/>
          <xs:element ref="en:Output"/>
          <xs:element ref="en:Pageformat"/>
          <xs:element ref="en:Paragraph"/>
          <xs:element ref="en:PlaceObject"/>
          <xs:element ref="en:PositioningArea"/>
          <xs:element ref="en:PositioningFrame"/>
          <xs:element ref="en:ProcessNode"/>
          <xs:element ref="en:SaveDataset"/>
          <xs:element ref="en:SavePages"/>
          <xs:element ref="en:SetGrid"/>
          <xs:element ref="en:SetVariable"/>
          <xs:element ref="en:SortSequence"/>
          <xs:element ref="en:Sub"/>
          <xs:element ref="en:Sup"/>
          <xs:element ref="en:Switch"/>
          <xs:element ref="en:Table"/>
          <xs:element ref="en:Tablehead"/>
          <xs:element ref="en:Tablerule"/>
          <xs:element ref="en:Td"/>
          <xs:element ref="en:Tr"/>
          <xs:element ref="en:Trace"/>
          <xs:element ref="en:Until"/>
          <xs:element ref="en:Value"/>
          <xs:element ref="en:While"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>The number of loops. Must be a number or castable as a number.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="variable">
        <xs:annotation>
          <xs:documentation>If given, store the current loop value in this variable. If omitted, the loop value is stored in the variable _loopcounter.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Makeindex">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="section" use="required">
        <xs:annotation>
          <xs:documentation>Create an XML-element with this name for every section (letter) in the index.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>The xpath expression ($variable) that holds the element structure for the index.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="sortkey" use="required">
        <xs:annotation>
          <xs:documentation>The name of the attribute holding the indexentry (that should be sorted).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="pagenumber">
        <xs:annotation>
          <xs:documentation>The name of the attribute that holds the page numbers. Defaults to 'page'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Margin">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="left" use="required">
        <xs:annotation>
          <xs:documentation>Left margin</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="right" use="required">
        <xs:annotation>
          <xs:documentation>Right margin</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="top" use="required">
        <xs:annotation>
          <xs:documentation>Top margin</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="bottom" use="required">
        <xs:annotation>
          <xs:documentation>Bottom margin</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Mark">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>The name of the mark to be set.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="append">
        <xs:annotation>
          <xs:documentation>When yes, append the current page to the previous values of the mark. Useful to get page ranges in an index. (Default is no.)</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Append the page number to the previous value of the mark.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Replace the previous value.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Message">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Writes a message onto the console and to the protocol file.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Value"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="select">
        <xs:annotation>
          <xs:documentation>Contents of the message. You can alternatively specify the message by the child elements Value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="error">
        <xs:annotation>
          <xs:documentation>Generate an error besides writing the message.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Report an error.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Do not report an error (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="errorcode">
        <xs:annotation>
          <xs:documentation>If an error is raised, use this code on exit. Defaults to 1</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="NewPage">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="pagetype">
        <xs:annotation>
          <xs:documentation>The name of the next page type that should be used.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="skippagetype">
        <xs:annotation>
          <xs:documentation>The pagetype of the blank page if inserted (see the attribute openon).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="openon">
        <xs:annotation>
          <xs:documentation>The next current page will be a left or a right page. E.g. when on page 1 and openon="right" then page 2 is empty and the next current page is 3.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="left">
              <xs:annotation>
                <xs:documentation>The next objects will be placed on a left page.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="right">
              <xs:annotation>
                <xs:documentation>The next objects will be placed on a right page.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="NextFrame">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="area" use="required">
        <xs:annotation>
          <xs:documentation>Name of the positioning area.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="NextRow">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="area">
        <xs:annotation>
          <xs:documentation>Name of the area of the virtual cursor.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="row">
        <xs:annotation>
          <xs:documentation>The absolute number of the row for the cursor. If no row is given, the system tries to find a completely free row (perhaps on an empty page).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="rows">
        <xs:annotation>
          <xs:documentation>The number of rows to clear. Defaults to 1.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="NoBreak">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Don't allow a line break within this element</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="maxwidth">
        <xs:annotation>
          <xs:documentation>Set the maximum width of the text if it cannot be deduced from the current surrounding (such as table cells).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="reduce">
        <xs:annotation>
          <xs:documentation>Reduce the text size if necessary.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="fontsize">
              <xs:annotation>
                <xs:documentation>Reduces the text by decreasing the font size.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="cut">
              <xs:annotation>
                <xs:documentation>Inserts text given in the attribute text if the paragraph is too long.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="keeptogether">
              <xs:annotation>
                <xs:documentation>Don't allow a line break within NoBreak (default)</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="text">
        <xs:annotation>
          <xs:documentation>The text to be inserted if the paragraph should be cut. For example '...'</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="factor">
        <xs:annotation>
          <xs:documentation>Multiplier for the font size when reduce=fontsize. Default value: 0.9. That means the font size gets decreased by 0.9 until the text fits the objects width.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fontface">
        <xs:annotation>
          <xs:documentation>The name of the fontface for text to be reduced. The default is »text« (lowercase t).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Ol">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Create an ordered list, just like in HTML</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Li"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Options">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="colorprofile">
        <xs:annotation>
          <xs:documentation>The filename of the color profile. The default profile is »ISO Coated v2 (ECI)«. Only used when spot colors are used.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="crop">
        <xs:annotation>
          <xs:documentation>Crop the pages so that the pdf size of the page is at its minimum. Allowed values are yes, no and a length.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="cutmarks">
        <xs:annotation>
          <xs:documentation>Cut marks / crop marks will be placed in the PDF. The distance of the marks from the imaginary center is determined by the attribute trim, but is at least 5mm. The length of the cut marks is 1cm. The default of this attribute is no, that means no cut marks will be displayed.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Show crop marks.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't show crop marks (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="defaultarea">
        <xs:annotation>
          <xs:documentation>Name of the area that is used as a default for placing text (commands Output and PlaceObject). Default is _page.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="ignoreeol">
        <xs:annotation>
          <xs:documentation>Ignore newlines in data-xml</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Ignore newlines in data-xml</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Respect newlines in data-xml</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="imagenotfound">
        <xs:annotation>
          <xs:documentation>When an image is not found: should the publisher raise an error?</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="warning">
              <xs:annotation>
                <xs:documentation>Show a warning</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="error">
              <xs:annotation>
                <xs:documentation>Raise an error (default)</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="mainlanguage">
        <xs:annotation>
          <xs:documentation>The default language for text (hyphenation). You can also set the default language on the command line and locally set it at Paragraph.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="German">
              <xs:annotation>
                <xs:documentation>Switch to German hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="English (Great Britain)">
              <xs:annotation>
                <xs:documentation>Switch to British hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Czech">
              <xs:annotation>
                <xs:documentation>Switch to Czech hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Danish">
              <xs:annotation>
                <xs:documentation>Switch to Danish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Dutch">
              <xs:annotation>
                <xs:documentation>Switch to Dutch hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="English (USA)">
              <xs:annotation>
                <xs:documentation>Switch to American English hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Finnish">
              <xs:annotation>
                <xs:documentation>Switch to Finnish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Greek">
              <xs:annotation>
                <xs:documentation>Switch to Monotonic Greek hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Ancient Greek">
              <xs:annotation>
                <xs:documentation>Switch to Ancient Greek hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Hungarian">
              <xs:annotation>
                <xs:documentation>Switch to Hungarian hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Italian">
              <xs:annotation>
                <xs:documentation>Switch to Italian hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Norwegian Bokmål">
              <xs:annotation>
                <xs:documentation>Switch to Norwegian Bokmål hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Norwegian Nynorsk">
              <xs:annotation>
                <xs:documentation>Switch to Norwegian Nynorsk hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Polish">
              <xs:annotation>
                <xs:documentation>Switch to Polish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Portuguese">
              <xs:annotation>
                <xs:documentation>Switch to Portuguese hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Russian">
              <xs:annotation>
                <xs:documentation>Switch to Russian hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Serbian">
              <xs:annotation>
                <xs:documentation>Switch to Serbian hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Spanish">
              <xs:annotation>
                <xs:documentation>Switch to Spanish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Swedish">
              <xs:annotation>
                <xs:documentation>Switch to Swedish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Turkish">
              <xs:annotation>
                <xs:documentation>Switch to Turkish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="resetmarks">
        <xs:annotation>
          <xs:documentation>Yes: ignore the marks file from previous run.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Ignore marks from the previous run.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Use marks from the previous run (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="startpage">
        <xs:annotation>
          <xs:documentation>Set the number of the first page.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="bleed">
        <xs:annotation>
          <xs:documentation>The amount of bleed. Defaults to 0mm.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="bleedmarks">
        <xs:annotation>
          <xs:documentation>Trim marks will be placed in the PDF. The distance of the marks from the imaginary center is determined by the attribute trim, but is at least 5mm. The length of the cut marks is 1cm. The default of this attribute is no, that means no trim marks will be displayed. The trim marks show the additional trim distance.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Show trim marks.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't show trim marks (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Otherwise">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Default branch of a Switch command.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:AddSearchpath"/>
            <xs:element ref="en:Attribute"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Barcode"/>
            <xs:element ref="en:Bookmark"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Column"/>
            <xs:element ref="en:Columns"/>
            <xs:element ref="en:Copy-of"/>
            <xs:element ref="en:DefineColor"/>
            <xs:element ref="en:DefineFontfamily"/>
            <xs:element ref="en:DefineFontalias"/>
            <xs:element ref="en:DefineTextformat"/>
            <xs:element ref="en:Element"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:Group"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:Hyphenation"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Initial"/>
            <xs:element ref="en:Include"/>
            <xs:element ref="en:InsertPages"/>
            <xs:element ref="en:Layout"/>
            <xs:element ref="en:Li"/>
            <xs:element ref="en:LoadDataset"/>
            <xs:element ref="en:LoadFontfile"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Message"/>
            <xs:element ref="en:NewPage"/>
            <xs:element ref="en:NextFrame"/>
            <xs:element ref="en:NextRow"/>
            <xs:element ref="en:Options"/>
            <xs:element ref="en:Output"/>
            <xs:element ref="en:Pageformat"/>
            <xs:element ref="en:Paragraph"/>
            <xs:element ref="en:PlaceObject"/>
            <xs:element ref="en:PositioningArea"/>
            <xs:element ref="en:PositioningFrame"/>
            <xs:element ref="en:ProcessNode"/>
            <xs:element ref="en:SaveDataset"/>
            <xs:element ref="en:SavePages"/>
            <xs:element ref="en:SetGrid"/>
            <xs:element ref="en:SetVariable"/>
            <xs:element ref="en:SortSequence"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Table"/>
            <xs:element ref="en:Tablehead"/>
            <xs:element ref="en:Tablerule"/>
            <xs:element ref="en:Td"/>
            <xs:element ref="en:Tr"/>
            <xs:element ref="en:Trace"/>
            <xs:element ref="en:Until"/>
            <xs:element ref="en:Value"/>
            <xs:element ref="en:While"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Output">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>This command is similar to PlaceObject and is currently limited to output text which can be broken across positioning frames and which can wrap around objects.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Text"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="allocate">
        <xs:annotation>
          <xs:documentation>Should text flow around already allocated objects? This currently works on the current page only.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:union>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="yes">
                  <xs:annotation>
                    <xs:documentation>Regular behavior: the text does not flow around objects.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="auto">
                  <xs:annotation>
                    <xs:documentation>Text flows around allocated objects.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="\{.+\}"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="area">
        <xs:annotation>
          <xs:documentation>The name of the positioning frame for the text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="row">
        <xs:annotation>
          <xs:documentation>The starting row for the text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Overlay">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Overlays the first element with the following »positions«.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Image"/>
          <xs:element ref="en:Box"/>
          <xs:element ref="en:Circle"/>
          <xs:element ref="en:Rule"/>
          <xs:element ref="en:Textblock"/>
          <xs:element ref="en:Barcode"/>
          <xs:element ref="en:Table"/>
          <xs:element ref="en:Transformation"/>
          <xs:element ref="en:Frame"/>
          <xs:element ref="en:Switch"/>
          <xs:element ref="en:Position"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Paragraph">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Insert a paragraph of text. The width of the paragraph is inherited from the surrounding element.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Initial"/>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="allowbreak">
        <xs:annotation>
          <xs:documentation>(Experimental!) list of characters where a line break is possible. Space character is not implied when this attribute is set.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="color">
        <xs:annotation>
          <xs:documentation>Color of the paragraph. Must be defined with DefineColor before use.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="textformat">
        <xs:annotation>
          <xs:documentation>Name of the textformat that is applied to the paragraph. If none is specified the textformat text is used.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fontface">
        <xs:annotation>
          <xs:documentation>The name of the fontface for the paragraph. The default is »text« (lowercase t).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="language">
        <xs:annotation>
          <xs:documentation>Name of the language for hyphenation.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="German">
              <xs:annotation>
                <xs:documentation>Switch to German hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="English (Great Britain)">
              <xs:annotation>
                <xs:documentation>Switch to British hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Czech">
              <xs:annotation>
                <xs:documentation>Switch to Czech hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Danish">
              <xs:annotation>
                <xs:documentation>Switch to Danish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Dutch">
              <xs:annotation>
                <xs:documentation>Switch to Dutch hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="English (USA)">
              <xs:annotation>
                <xs:documentation>Switch to American English hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Finnish">
              <xs:annotation>
                <xs:documentation>Switch to Finnish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Greek">
              <xs:annotation>
                <xs:documentation>Switch to Monotonic Greek hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Ancient Greek">
              <xs:annotation>
                <xs:documentation>Switch to Ancient Greek hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Hungarian">
              <xs:annotation>
                <xs:documentation>Switch to Hungarian hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Italian">
              <xs:annotation>
                <xs:documentation>Switch to Italian hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Norwegian Bokmål">
              <xs:annotation>
                <xs:documentation>Switch to Norwegian Bokmål hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Norwegian Nynorsk">
              <xs:annotation>
                <xs:documentation>Switch to Norwegian Nynorsk hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Polish">
              <xs:annotation>
                <xs:documentation>Switch to Polish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Portuguese">
              <xs:annotation>
                <xs:documentation>Switch to Portuguese hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Russian">
              <xs:annotation>
                <xs:documentation>Switch to Russian hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Serbian">
              <xs:annotation>
                <xs:documentation>Switch to Serbian hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Spanish">
              <xs:annotation>
                <xs:documentation>Switch to Spanish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Swedish">
              <xs:annotation>
                <xs:documentation>Switch to Swedish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="Turkish">
              <xs:annotation>
                <xs:documentation>Switch to Turkish hyphenation patterns.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="class">
        <xs:annotation>
          <xs:documentation>CSS class for this paragraph.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id">
        <xs:annotation>
          <xs:documentation>CSS id for this paragraph.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Pageformat">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="width" use="required">
        <xs:annotation>
          <xs:documentation>Width of the PDF pages.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="height" use="required">
        <xs:annotation>
          <xs:documentation>The height of the PDF pages.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Pagetype">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Define a master page. A master page is chosen depending on the criterion given with the attribute »test«.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Margin"/>
          <xs:choice>
            <xs:element ref="en:PositioningArea"/>
            <xs:element ref="en:AtPageCreation"/>
            <xs:element ref="en:AtPageShipout"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Grid"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="defaultcolor">
        <xs:annotation>
          <xs:documentation>The default text color for this page (unless overridden in Paragraph or Textblock). Defaults to 'black'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="test" use="required">
        <xs:annotation>
          <xs:documentation>If this xpath expression evaluates to true, this page is taken as a master page.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>Name of the master page. It is for informational purpose and as a selection for NewPage.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="PDFOptions">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="duplex">
        <xs:annotation>
          <xs:documentation>Set viewer preference to one or two page printing. Default: empty.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="simplex">
              <xs:annotation>
                <xs:documentation>One page per sheet</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="duplexflipshortedge">
              <xs:annotation>
                <xs:documentation>Two pages per sheet and flip on short edge</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="duplexfliplongedge">
              <xs:annotation>
                <xs:documentation>Two pages per sheet and flip on long edge</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="numcopies">
        <xs:annotation>
          <xs:documentation>Set the number of copies. At most 5 are allowed in the PDF specification.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="printscaling">
        <xs:annotation>
          <xs:documentation>Should the printer scale the pages?</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="appdefault">
              <xs:annotation>
                <xs:documentation>Use the default from the PDF viewer</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="none">
              <xs:annotation>
                <xs:documentation>No page scaling</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="picktraybypdfsize">
        <xs:annotation>
          <xs:documentation>Activate the check box in the PDF viewer for choosing the paper tray based on the page size.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Activate checkbox</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Deactivate checkbox</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="PlaceObject">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Image"/>
          <xs:element ref="en:Box"/>
          <xs:element ref="en:Circle"/>
          <xs:element ref="en:Rule"/>
          <xs:element ref="en:Textblock"/>
          <xs:element ref="en:Barcode"/>
          <xs:element ref="en:Table"/>
          <xs:element ref="en:Transformation"/>
          <xs:element ref="en:Frame"/>
          <xs:element ref="en:Switch"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="allocate">
        <xs:annotation>
          <xs:documentation>Determines if the area of the object is marked as »allocated«. With allocate="no", the cursor position is not changed.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Occupy space in the grid (default for grid positioning).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't allocate space in the grid (default for absolute positioning).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="allocate-left">
        <xs:annotation>
          <xs:documentation>Additional allocation area to the left.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="allocate-right">
        <xs:annotation>
          <xs:documentation>Additional allocation area to the right.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="allocate-top">
        <xs:annotation>
          <xs:documentation>Additional allocation area to the top.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="allocate-bottom">
        <xs:annotation>
          <xs:documentation>Additional allocation area to the bottom.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="area">
        <xs:annotation>
          <xs:documentation>Name of the (positioning) area, the object is placed in. If no area is given, the object is placed on the main area, the page (this is the area that contains all grid cells).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="groupname">
        <xs:annotation>
          <xs:documentation>The name of the group that gets output. When given a groupname, PlaceObject should not contain any objects.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-bottom-right-radius">
        <xs:annotation>
          <xs:documentation>Radius of corner bottom right.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-top-right-radius">
        <xs:annotation>
          <xs:documentation>Radius of corner top right.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-top-left-radius">
        <xs:annotation>
          <xs:documentation>Radius of corner top left.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-bottom-left-radius">
        <xs:annotation>
          <xs:documentation>Radius of corner bottom left.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="frame">
        <xs:annotation>
          <xs:documentation>Draw a frame around the object. You need to supply the frame color.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="solid">
              <xs:annotation>
                <xs:documentation>Draw a frame around the object.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="without">
              <xs:annotation>
                <xs:documentation>Don't draw a frame around the object.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="framecolor">
        <xs:annotation>
          <xs:documentation>The color of the frame around the object. Only makes sense in combination with the attribute 'frame'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="background">
        <xs:annotation>
          <xs:documentation>Fill the background of the object (full grid cells) with a color, given by backgroundcolor.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:union>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="full">
                  <xs:annotation>
                    <xs:documentation>Fill background with the given color (in backgroundcolor).</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="without">
                  <xs:annotation>
                    <xs:documentation>Empty background</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="\{.+\}"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="backgroundcolor">
        <xs:annotation>
          <xs:documentation>Color of the background if ›background‹ is set to ›full‹.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="rulewidth">
        <xs:annotation>
          <xs:documentation>The thickness of the frame that is drawn around the object. Only makes sense in combination with the attribute 'frame'.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="column">
        <xs:annotation>
          <xs:documentation>If contents is a number: the grid cell from the left margin of the area. If it is a length: the absolute position from the left paper margin. If this attribute is omitted, the system tries to place the object by itself.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="keepposition">
        <xs:annotation>
          <xs:documentation>Don't move the virtual cursor to the next free space</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Don't move the virtual cursor.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Move the virtual cursor (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="halign">
        <xs:annotation>
          <xs:documentation>When an object is placed on the grid and it's width is not a multiple of grid width, there is a space left on the page between the object an the next grid cell. With this attribute you can instruct the software where to place the gap.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="left">
              <xs:annotation>
                <xs:documentation>The object is aligned at the left.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="center">
              <xs:annotation>
                <xs:documentation>The object is aligned so that the space to the left is the same as to the right.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="right">
              <xs:annotation>
                <xs:documentation>The object is aligned to the right.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="page">
        <xs:annotation>
          <xs:documentation>The page (later in the PDF), the object should appear on. Number of the keyword »next« for the next page.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="origin-x">
        <xs:annotation>
          <xs:documentation>The origin for rotation.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="left">
              <xs:annotation>
                <xs:documentation>The origin is at the left hand side.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="center">
              <xs:annotation>
                <xs:documentation>The origin is in the center of the object.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="right">
              <xs:annotation>
                <xs:documentation>The origin is at the right hand side.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="origin-y">
        <xs:annotation>
          <xs:documentation>The origin for rotation (on the vertical axis)</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="top">
              <xs:annotation>
                <xs:documentation>Rotation around a point at the top.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="center">
              <xs:annotation>
                <xs:documentation>Rotate around the vertical center.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom">
              <xs:annotation>
                <xs:documentation>Rotate around a point at the bottom.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="row">
        <xs:annotation>
          <xs:documentation>The row where the object is placed. If none given, the publisher tries to find a row by itself. You can give a number (in grid cells) or an absolute value (from top left).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="rotate">
        <xs:annotation>
          <xs:documentation>Rotates the object.  The amount of movement is defined by the specified angle; if positive, the movement will be clockwise, if negative, it will be counter-clockwise.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="maxheight">
        <xs:annotation>
          <xs:documentation>Only used for multi-page table: the maximum height of tables.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="valign">
        <xs:annotation>
          <xs:documentation>When an object is placed on the grid and it's height is not a multiple of grid height, there is a space left on the page between the object an the next grid cell. With this attribute you can instruct the software where to place the gap.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="top">
              <xs:annotation>
                <xs:documentation>The object is aligned at the top.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="middle">
              <xs:annotation>
                <xs:documentation>The object is aligned so that the space at the top is the same as at the bottom.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom">
              <xs:annotation>
                <xs:documentation>The object is aligned at the bottom.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="hreference">
        <xs:annotation>
          <xs:documentation>Determines the placement of the object relative to the given column. If 'left' (which is the default), the given column is the left border of the object. If 'right', the column determines the right edge of the object.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="left">
              <xs:annotation>
                <xs:documentation>The object is placed in given column.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="right">
              <xs:annotation>
                <xs:documentation>The given columns determines the right edge of the border.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="vreference">
        <xs:annotation>
          <xs:documentation>Sets the placement of the object relative to the given row.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="bottom">
              <xs:annotation>
                <xs:documentation>The row determines the bottom edge of the object.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="top">
              <xs:annotation>
                <xs:documentation>If 'top' (default), the given row is the top border of the object.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Position">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Add an element to the current Overlay.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Image"/>
          <xs:element ref="en:Box"/>
          <xs:element ref="en:Circle"/>
          <xs:element ref="en:Rule"/>
          <xs:element ref="en:Textblock"/>
          <xs:element ref="en:Barcode"/>
          <xs:element ref="en:Table"/>
          <xs:element ref="en:Transformation"/>
          <xs:element ref="en:Frame"/>
          <xs:element ref="en:Switch"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="x" use="required">
        <xs:annotation>
          <xs:documentation>The horizontal position (0=left, 100=right).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="y" use="required">
        <xs:annotation>
          <xs:documentation>The vertical position (0=bottom, 100=top).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="PositioningArea">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:PositioningFrame"/>
          <xs:element ref="en:Loop"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>Name of the area.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="framecolor">
        <xs:annotation>
          <xs:documentation>Set the color of the frame in grid=yes mode. Defaults to 'red'</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="PositioningFrame">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="width" use="required">
        <xs:annotation>
          <xs:documentation>The width of the frame in grid cells.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="height" use="required">
        <xs:annotation>
          <xs:documentation>The height of the frame in grid cells.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="row" use="required">
        <xs:annotation>
          <xs:documentation>The row number relative to the grid.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="column" use="required">
        <xs:annotation>
          <xs:documentation>First column of the frame, in grid cells.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ProcessNode">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="limit">
        <xs:annotation>
          <xs:documentation>Limits the number of items processed with this command</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>Selection of child elements, that are to be processed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="mode">
        <xs:annotation>
          <xs:documentation>Name of the mode. This must match the mode at the corresponding Record element. With this it is possible to have different rules for the same element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Record">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Contains the instructions when the publisher processes the element in the data file with the given name. The record matching the root element will be called by the software automatically, all further data handling must be done by the user.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:AddSearchpath"/>
            <xs:element ref="en:Bookmark"/>
            <xs:element ref="en:DefineColor"/>
            <xs:element ref="en:DefineFontfamily"/>
            <xs:element ref="en:DefineFontalias"/>
            <xs:element ref="en:DefineTextformat"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Group"/>
            <xs:element ref="en:Hyphenation"/>
            <xs:element ref="en:Include"/>
            <xs:element ref="en:InsertPages"/>
            <xs:element ref="en:Layout"/>
            <xs:element ref="en:LoadDataset"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Message"/>
            <xs:element ref="en:NewPage"/>
            <xs:element ref="en:NextFrame"/>
            <xs:element ref="en:NextRow"/>
            <xs:element ref="en:Output"/>
            <xs:element ref="en:Pagetype"/>
            <xs:element ref="en:PlaceObject"/>
            <xs:element ref="en:ProcessNode"/>
            <xs:element ref="en:SaveDataset"/>
            <xs:element ref="en:SavePages"/>
            <xs:element ref="en:SetVariable"/>
            <xs:element ref="en:SortSequence"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Until"/>
            <xs:element ref="en:While"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="element" use="required">
        <xs:annotation>
          <xs:documentation>The name of the element the record matches.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="mode">
        <xs:annotation>
          <xs:documentation>Name of the mode that matches the mode in ProcessNode.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Regular">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="fontface" use="required">
        <xs:annotation>
          <xs:documentation>The symbolic name of the font file.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Rule">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="direction" use="required">
        <xs:annotation>
          <xs:documentation>The direction of the rule.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="horizontal">
              <xs:annotation>
                <xs:documentation>Horizontal rule</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="vertical">
              <xs:annotation>
                <xs:documentation>Vertical rule</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="rulewidth">
        <xs:annotation>
          <xs:documentation>The rule thickness given in grid cells or as a length.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="length" use="required">
        <xs:annotation>
          <xs:documentation>The length of the rule in grid cells or as an absolute length.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="color">
        <xs:annotation>
          <xs:documentation>The color of the rule. Defaults to black.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="dashed">
        <xs:annotation>
          <xs:documentation>Use a dashed rule instead of a solid rule.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Draw a dashed rule.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Draw a solid rule.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SaveDataset">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Saves an element/attribute structure to be used in the next publisher run. The contents must have a tree structure.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Element"/>
            <xs:element ref="en:Makeindex"/>
            <xs:element ref="en:SortSequence"/>
            <xs:element ref="en:Copy-of"/>
            <xs:element ref="en:ForAll"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="filename" use="required">
        <xs:annotation>
          <xs:documentation>Name of the file. Example: toc</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="elementname" use="required">
        <xs:annotation>
          <xs:documentation>Name of the root element that surrounds the elements given by the child elements.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="select">
        <xs:annotation>
          <xs:documentation>Alternative to giving the data structure in the child elements.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="attributes">
        <xs:annotation>
          <xs:documentation>The variable (as an XPath expression, e.g. $foo) which contains Attribute Elements. These attributes are added to the root element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SavePages">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:AddSearchpath"/>
          <xs:element ref="en:Bookmark"/>
          <xs:element ref="en:DefineColor"/>
          <xs:element ref="en:DefineFontfamily"/>
          <xs:element ref="en:DefineFontalias"/>
          <xs:element ref="en:DefineTextformat"/>
          <xs:element ref="en:ForAll"/>
          <xs:element ref="en:Group"/>
          <xs:element ref="en:Hyphenation"/>
          <xs:element ref="en:Include"/>
          <xs:element ref="en:InsertPages"/>
          <xs:element ref="en:Layout"/>
          <xs:element ref="en:LoadDataset"/>
          <xs:element ref="en:Loop"/>
          <xs:element ref="en:Message"/>
          <xs:element ref="en:NewPage"/>
          <xs:element ref="en:NextFrame"/>
          <xs:element ref="en:NextRow"/>
          <xs:element ref="en:Output"/>
          <xs:element ref="en:Pagetype"/>
          <xs:element ref="en:PlaceObject"/>
          <xs:element ref="en:ProcessNode"/>
          <xs:element ref="en:SaveDataset"/>
          <xs:element ref="en:SavePages"/>
          <xs:element ref="en:SetVariable"/>
          <xs:element ref="en:SortSequence"/>
          <xs:element ref="en:Switch"/>
          <xs:element ref="en:Until"/>
          <xs:element ref="en:While"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="name" use="required">
        <xs:annotation>
          <xs:documentation>The name of the discarded output. For later retrieval with InsertPages.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetGrid">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="width">
        <xs:annotation>
          <xs:documentation>The width of a grid cell. Use either width or nx, not both.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="height">
        <xs:annotation>
          <xs:documentation>The height of a grid cell. Use either height or ny, but not both.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="nx">
        <xs:annotation>
          <xs:documentation>Specify the number of grid cells in horizontal direction. Use either nx or width, not both.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="ny">
        <xs:annotation>
          <xs:documentation>Set the number of grid cells in vertical direction. Give ny or height, but not both.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="dx">
        <xs:annotation>
          <xs:documentation>Distance between two grid cells (horizontal)</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="dy">
        <xs:annotation>
          <xs:documentation>Distance between two grid cells (horizontal)</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetVariable">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Paragraph"/>
          <xs:element ref="en:Value"/>
          <xs:element ref="en:Copy-of"/>
          <xs:element ref="en:Element"/>
          <xs:element ref="en:Attribute"/>
          <xs:element ref="en:Switch"/>
          <xs:element ref="en:Loop"/>
          <xs:element ref="en:ForAll"/>
          <xs:element ref="en:Tr"/>
          <xs:element ref="en:Td"/>
          <xs:element ref="en:Columns"/>
          <xs:element ref="en:Tablerule"/>
          <xs:element ref="en:SortSequence"/>
          <xs:element ref="en:Tablehead"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="variable" use="required">
        <xs:annotation>
          <xs:documentation>The name of the variable that holds the contents.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="select">
        <xs:annotation>
          <xs:documentation>The value of the contents.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="trace">
        <xs:annotation>
          <xs:documentation>Show information about the assignment in the log file.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Show information.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't show information (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SortSequence">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="select" use="required">
        <xs:annotation>
          <xs:documentation>The data that should be sorted.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="removeduplicates">
        <xs:annotation>
          <xs:documentation>If this attribute is used then it contains the name of the data-attribute that gets evaluated when duplicates are eliminated.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="criterion" use="required">
        <xs:annotation>
          <xs:documentation>Name of the attribute that is used as the sort key.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Span">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Surround text by styling options.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="class">
        <xs:annotation>
          <xs:documentation>CSS class for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id">
        <xs:annotation>
          <xs:documentation>CSS id for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="background-color">
        <xs:annotation>
          <xs:documentation>The background color of the content</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="background-padding-top">
        <xs:annotation>
          <xs:documentation>The top padding of the background color (can be negative)</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="background-padding-bottom">
        <xs:annotation>
          <xs:documentation>The bottom padding of the background color (can be negative)</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Sub">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Subscript text.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Value"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Sup">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Superscript text.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Value"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Switch">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Create an if-then-else construct. The test attribute of each Case commands is evaluated until it yields true. The contents of the Case gets executed. If no test succeeds, the (optional) Otherwise gets executed.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:Case"/>
          <xs:element ref="en:Otherwise"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Stylesheet">
    <xs:complexType mixed="true">
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="filename">
        <xs:annotation>
          <xs:documentation>The filename of the CSS stylesheet including the file extension.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Table">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Tablehead"/>
          <xs:element ref="en:Tablefoot"/>
          <xs:element ref="en:Columns"/>
          <xs:element ref="en:Tr"/>
          <xs:element ref="en:Copy-of"/>
          <xs:element ref="en:Tablerule"/>
          <xs:element ref="en:Message"/>
          <xs:element ref="en:Switch"/>
          <xs:element ref="en:Loop"/>
          <xs:element ref="en:ForAll"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="eval">
        <xs:annotation>
          <xs:documentation>Evaluates the given XPath expression and discards its output.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="stretch">
        <xs:annotation>
          <xs:documentation>If the table contents is narrow and stretch has the value no, the table only uses the minimal width. If the table contents is wider than the value width or stretch has the value max, the table's width is the size given in the width attribute.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="max">
              <xs:annotation>
                <xs:documentation>Stretch the table to its given width.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>The table width is the minimum width depending on it's contents.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="width">
        <xs:annotation>
          <xs:documentation>The maximum width of the table (in grid cells or absolute values). Defaults to the available space.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding">
        <xs:annotation>
          <xs:documentation>The distance between the table border and the table contents.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fontface">
        <xs:annotation>
          <xs:documentation>Name of the font family for the table. If not given, the font face ‘text’ is used.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="columndistance">
        <xs:annotation>
          <xs:documentation>Distance between two table columns.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="leading">
        <xs:annotation>
          <xs:documentation>The distance between two rows.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-collapse">
        <xs:annotation>
          <xs:documentation>Determine if adjacent table cells share borders. The behavior of border-collapse="collapse" is undefined when the table has columndistance or rowdistance set to a non-zero value and if the adjacent borders don't have the same width and color.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="separate">
              <xs:annotation>
                <xs:documentation>The borders are part of the cell and not shared with its neighbors.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="collapse">
              <xs:annotation>
                <xs:documentation>The borders of neighboring cells overlap.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Tablefoot">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Tablerule"/>
          <xs:element ref="en:Copy-of"/>
          <xs:element ref="en:Tr"/>
          <xs:element ref="en:Switch"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="page">
        <xs:annotation>
          <xs:documentation>This command is only valid for the given pages. The default is to place the foot on all pages.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="all">
              <xs:annotation>
                <xs:documentation>Place the footer on all pages.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="last">
              <xs:annotation>
                <xs:documentation>Display the table footer only on the last page.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Tablehead">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Tablerule"/>
          <xs:element ref="en:Copy-of"/>
          <xs:element ref="en:Tr"/>
          <xs:element ref="en:Switch"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="page">
        <xs:annotation>
          <xs:documentation>The page the table head should appear on. Defaults to »all«</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="first">
              <xs:annotation>
                <xs:documentation>Only appear on the first page.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="all">
              <xs:annotation>
                <xs:documentation>All pages. If »first« is defined, the tablehead appears on all pages but the first.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Td">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Td wraps a table cell, just like HTML.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:Barcode"/>
            <xs:element ref="en:Box"/>
            <xs:element ref="en:Copy-of"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:Groupcontents"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Overlay"/>
            <xs:element ref="en:Paragraph"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Table"/>
            <xs:element ref="en:VSpace"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="backgroundcolor">
        <xs:annotation>
          <xs:documentation>The name of the background color (if the cell should get a background).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-left">
        <xs:annotation>
          <xs:documentation>The width (thickness) of the left border. The border is inside the cell.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-right">
        <xs:annotation>
          <xs:documentation>The width (thickness) of the right border. The border is inside the cell.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-top">
        <xs:annotation>
          <xs:documentation>The width (thickness) of the top border. The border is inside the cell.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-bottom">
        <xs:annotation>
          <xs:documentation>The width (thickness) of the bottom border. The border is inside the cell.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-left-color">
        <xs:annotation>
          <xs:documentation>The color of the left border.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-right-color">
        <xs:annotation>
          <xs:documentation>The color of the left border.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-top-color">
        <xs:annotation>
          <xs:documentation>The color of the top border.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="border-bottom-color">
        <xs:annotation>
          <xs:documentation>The color of the bottom border.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="class">
        <xs:annotation>
          <xs:documentation>The css class to be used for formatting the table cell.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id">
        <xs:annotation>
          <xs:documentation>CSS id for this table cell.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="colspan">
        <xs:annotation>
          <xs:documentation>The number of columns this cell spans. Defaults to 1.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="rowspan">
        <xs:annotation>
          <xs:documentation>The number of rows for this cell. Defaults to 1.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="align">
        <xs:annotation>
          <xs:documentation>Horizontal alignment of the cell contents. Defaults to left.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:union>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="left">
                  <xs:annotation>
                    <xs:documentation>The contents is left aligned (ragged right). This is the default.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="right">
                  <xs:annotation>
                    <xs:documentation>The contents of the cell is right aligned.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="center">
                  <xs:annotation>
                    <xs:documentation>The contents of the cell is aligned at the center, with ragged right and left margin.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="justify">
                  <xs:annotation>
                    <xs:documentation>Justified text with straight margins.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="\{.+\}"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="valign">
        <xs:annotation>
          <xs:documentation>The vertical alignment of the cell.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:union>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="top">
                  <xs:annotation>
                    <xs:documentation>The contents is aligned at the top edge of the cell.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="middle">
                  <xs:annotation>
                    <xs:documentation>The contents is vertically centered.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="bottom">
                  <xs:annotation>
                    <xs:documentation>The contents is aligned at the bottom edge of the cell.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="\{.+\}"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="padding">
        <xs:annotation>
          <xs:documentation>Shorthand for setting padding-top and the other values with this length.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-top">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the top edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-bottom">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the bottom edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-left">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the left edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="padding-right">
        <xs:annotation>
          <xs:documentation>Set the inner distance (width between contents and the border) to the right edge.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="background-text">
        <xs:annotation>
          <xs:documentation>A text that should be placed in the background of the table cell.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="background-textcolor">
        <xs:annotation>
          <xs:documentation>The color of the text in the background (if any).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="background-transform">
        <xs:annotation>
          <xs:documentation>The transformation of the background text (if any). Currently supported: rotate(-40deg) (and other angles in the range 0 to -90).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="background-size">
        <xs:annotation>
          <xs:documentation>Controls the size of the background text. Currently only 'contain' and 'auto' is allowed.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="contain">
              <xs:annotation>
                <xs:documentation>Fill the height of the table cell.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="auto">
              <xs:annotation>
                <xs:documentation>The background text is not scaled.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="background-font-family">
        <xs:annotation>
          <xs:documentation>Set the font family of the background text. Defaults to the table font.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Tablerule">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="rulewidth">
        <xs:annotation>
          <xs:documentation>The width (thickness) of the rule. Defaults to 0.25pt.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="color">
        <xs:annotation>
          <xs:documentation>The color of the rule. Defaults to black.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="start">
        <xs:annotation>
          <xs:documentation>The first column of the rule. Defaults to 1.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="class">
        <xs:annotation>
          <xs:documentation>CSS class for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id">
        <xs:annotation>
          <xs:documentation>CSS id for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Textblock">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Create a rectangular piece of text.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Paragraph"/>
            <xs:element ref="en:Ol"/>
            <xs:element ref="en:Ul"/>
            <xs:element ref="en:Copy-of"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:Bookmark"/>
            <xs:element ref="en:Value"/>
            <xs:element ref="en:ForAll"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="angle">
        <xs:annotation>
          <xs:documentation>The angle (counter clockwise) that the text gets turned.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="color">
        <xs:annotation>
          <xs:documentation>The name of the color of the text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="width">
        <xs:annotation>
          <xs:documentation>Number of columns for the text. If not given, the surrounding element determines the width of the element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fontface">
        <xs:annotation>
          <xs:documentation>The name of the font family. Defaults to text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="textformat">
        <xs:annotation>
          <xs:documentation>The name of the text format to be applied to the text. Defaults to text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="columns">
        <xs:annotation>
          <xs:documentation>Number of columns in the textblock.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="columndistance">
        <xs:annotation>
          <xs:documentation>Distance between two columns. Defaults to 3mm.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="minheight">
        <xs:annotation>
          <xs:documentation>The minimum height of the textblock, given as a length or number (grid cells).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Text">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Create a text that can be broken across text containers or pages. To be used with Output</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:Bookmark"/>
            <xs:element ref="en:Copy-of"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:Ol"/>
            <xs:element ref="en:Paragraph"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:Ul"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="color">
        <xs:annotation>
          <xs:documentation>The name of the color of the text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="fontface">
        <xs:annotation>
          <xs:documentation>The name of the font family. Defaults to text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="textformat">
        <xs:annotation>
          <xs:documentation>The name of the text format to be applied to the text. Defaults to text.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Trace">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attribute name="assignments">
        <xs:annotation>
          <xs:documentation>Write assignments (SetVariable) to the log file.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Verbose output in the protocol file.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Regular run (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="grid">
        <xs:annotation>
          <xs:documentation>Draw the grid on the page.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Show the grid.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't show the grid (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="gridallocation">
        <xs:annotation>
          <xs:documentation>Draw allocated cells with yellow and conflicts with red markers.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Show grid allocation.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't show the grid allocation (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="hyphenation">
        <xs:annotation>
          <xs:documentation>Draw little marks to show all hyphenation points.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Show hyphenation points.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't show any hyphenation points (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="objects">
        <xs:annotation>
          <xs:documentation>Draw rectangles around objects.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Draw rectangles</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>No rectangles drawn around objects (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="verbose">
        <xs:annotation>
          <xs:documentation>Verbose output in the protocol file.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Verbose output in the protocol file.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Regular run (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="textformat">
        <xs:annotation>
          <xs:documentation>Show textformt as a tooltip in the PDF</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Show textformat</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Don't show textformat (default)</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Tr">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Tablerow</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:Message"/>
            <xs:element ref="en:Td"/>
            <xs:element ref="en:Copy-of"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Loop"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="align">
        <xs:annotation>
          <xs:documentation>Horizontal alignment of the table cells in this row.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="left">
              <xs:annotation>
                <xs:documentation>The contents is left aligned (ragged right). This is the default.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="right">
              <xs:annotation>
                <xs:documentation>The contents of the cell is right aligned.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="center">
              <xs:annotation>
                <xs:documentation>The contents of the cell is aligned at the center, with ragged right and left margin.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="justify">
              <xs:annotation>
                <xs:documentation>Justified text with straight margins.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="valign">
        <xs:annotation>
          <xs:documentation>Vertical alignment of the table cells in this row.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="top">
              <xs:annotation>
                <xs:documentation>The objects in this row are aligned at the top.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="middle">
              <xs:annotation>
                <xs:documentation>The objects in this row are aligned at the middle axis.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="bottom">
              <xs:annotation>
                <xs:documentation>The objects in this row are aligned at the bottom.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="minheight">
        <xs:annotation>
          <xs:documentation>Minimum row height in grid cells.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="backgroundcolor">
        <xs:annotation>
          <xs:documentation>Background color of each cell in this row.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="break-below">
        <xs:annotation>
          <xs:documentation>Allow a table break between this row and the following.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:union>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="yes">
                  <xs:annotation>
                    <xs:documentation>Allow a table break between this row and the following (default).</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="no">
                  <xs:annotation>
                    <xs:documentation>Disable a table break between this row and the following.</xs:documentation>
                  </xs:annotation>
                </xs:enumeration>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:pattern value="\{.+\}"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="data">
        <xs:annotation>
          <xs:documentation>Data that can be accessed via $_last_tr_data in the tablefoot and tablehead.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="sethead">
        <xs:annotation>
          <xs:documentation>Use this line for future table heads.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Use this line for future table heads.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>No special treatment of this line (default).</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="clear">
              <xs:annotation>
                <xs:documentation>Delete head. Next pages will have no head until new one is set with 'yes'.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="top-distance">
        <xs:annotation>
          <xs:documentation>The space above this row if it is not the first line on a new page / area.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Transformation">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Image"/>
          <xs:element ref="en:Box"/>
          <xs:element ref="en:Circle"/>
          <xs:element ref="en:Rule"/>
          <xs:element ref="en:Textblock"/>
          <xs:element ref="en:Barcode"/>
          <xs:element ref="en:Table"/>
          <xs:element ref="en:Frame"/>
          <xs:element ref="en:Transformation"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="matrix">
        <xs:annotation>
          <xs:documentation>The transformation matrix for the object. Expected is a space separated string of six values.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="origin-x">
        <xs:annotation>
          <xs:documentation>The origin for matrix transformation. Must be left, center or right or a number from 0 to 100 (0 = left, 100 = right).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="origin-y">
        <xs:annotation>
          <xs:documentation>The vertical origin for the matrix transformation. Must be top, center or bottom or a number from 0 to 100 (0 = top, 100 = bottom).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="U">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Underline text.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="dashed">
        <xs:annotation>
          <xs:documentation>Use a dashed rule instead of a solid rule.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="yes">
              <xs:annotation>
                <xs:documentation>Draw a dashed rule.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="no">
              <xs:annotation>
                <xs:documentation>Draw a solid rule.</xs:documentation>
              </xs:annotation>
            </xs:enumeration>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="class">
        <xs:annotation>
          <xs:documentation>CSS class for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id">
        <xs:annotation>
          <xs:documentation>CSS id for this element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Ul">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Li"/>
          <xs:element ref="en:ForAll"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Until">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Action"/>
          <xs:element ref="en:AddSearchpath"/>
          <xs:element ref="en:Attribute"/>
          <xs:element ref="en:B"/>
          <xs:element ref="en:Barcode"/>
          <xs:element ref="en:Bookmark"/>
          <xs:element ref="en:Br"/>
          <xs:element ref="en:Column"/>
          <xs:element ref="en:Columns"/>
          <xs:element ref="en:Copy-of"/>
          <xs:element ref="en:DefineColor"/>
          <xs:element ref="en:DefineFontfamily"/>
          <xs:element ref="en:DefineFontalias"/>
          <xs:element ref="en:DefineTextformat"/>
          <xs:element ref="en:Element"/>
          <xs:element ref="en:Fontface"/>
          <xs:element ref="en:ForAll"/>
          <xs:element ref="en:Frame"/>
          <xs:element ref="en:Group"/>
          <xs:element ref="en:HSpace"/>
          <xs:element ref="en:Hyphenation"/>
          <xs:element ref="en:I"/>
          <xs:element ref="en:Image"/>
          <xs:element ref="en:Initial"/>
          <xs:element ref="en:Include"/>
          <xs:element ref="en:InsertPages"/>
          <xs:element ref="en:Layout"/>
          <xs:element ref="en:Li"/>
          <xs:element ref="en:LoadDataset"/>
          <xs:element ref="en:LoadFontfile"/>
          <xs:element ref="en:Loop"/>
          <xs:element ref="en:Message"/>
          <xs:element ref="en:NewPage"/>
          <xs:element ref="en:NextFrame"/>
          <xs:element ref="en:NextRow"/>
          <xs:element ref="en:Options"/>
          <xs:element ref="en:Output"/>
          <xs:element ref="en:Pageformat"/>
          <xs:element ref="en:Paragraph"/>
          <xs:element ref="en:PlaceObject"/>
          <xs:element ref="en:PositioningArea"/>
          <xs:element ref="en:PositioningFrame"/>
          <xs:element ref="en:ProcessNode"/>
          <xs:element ref="en:SaveDataset"/>
          <xs:element ref="en:SavePages"/>
          <xs:element ref="en:SetGrid"/>
          <xs:element ref="en:SetVariable"/>
          <xs:element ref="en:SortSequence"/>
          <xs:element ref="en:Sub"/>
          <xs:element ref="en:Sup"/>
          <xs:element ref="en:Switch"/>
          <xs:element ref="en:Table"/>
          <xs:element ref="en:Tablehead"/>
          <xs:element ref="en:Tablerule"/>
          <xs:element ref="en:Td"/>
          <xs:element ref="en:Tr"/>
          <xs:element ref="en:Trace"/>
          <xs:element ref="en:Until"/>
          <xs:element ref="en:Value"/>
          <xs:element ref="en:While"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="test" use="required">
        <xs:annotation>
          <xs:documentation>Every time after the the loop is executed, the condition is evaluated. If it is true, the loop exits.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="URL">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>enables a better breaking of URLs.</xs:documentation>
          </xs:annotation>
          <xs:choice>
            <xs:element ref="en:A"/>
            <xs:element ref="en:Action"/>
            <xs:element ref="en:B"/>
            <xs:element ref="en:Br"/>
            <xs:element ref="en:Color"/>
            <xs:element ref="en:Fontface"/>
            <xs:element ref="en:ForAll"/>
            <xs:element ref="en:Frame"/>
            <xs:element ref="en:HSpace"/>
            <xs:element ref="en:I"/>
            <xs:element ref="en:Image"/>
            <xs:element ref="en:Loop"/>
            <xs:element ref="en:NoBreak"/>
            <xs:element ref="en:Sub"/>
            <xs:element ref="en:Sup"/>
            <xs:element ref="en:Span"/>
            <xs:element ref="en:Switch"/>
            <xs:element ref="en:U"/>
            <xs:element ref="en:URL"/>
            <xs:element ref="en:Value"/>
          </xs:choice>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Value">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:annotation>
            <xs:documentation>Contains a text value that is passed to the surrounding element.</xs:documentation>
          </xs:annotation>
          <xs:element ref="en:br"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="select">
        <xs:annotation>
          <xs:documentation>Value to be passed to the outer element.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="br">
    <xs:complexType/>
  </xs:element>
  <xs:element name="VSpace">
    <xs:complexType>
      <xs:group ref="en:foreign-nodes"/>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="While">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:choice>
          <xs:element ref="en:Action"/>
          <xs:element ref="en:AddSearchpath"/>
          <xs:element ref="en:Attribute"/>
          <xs:element ref="en:B"/>
          <xs:element ref="en:Barcode"/>
          <xs:element ref="en:Bookmark"/>
          <xs:element ref="en:Br"/>
          <xs:element ref="en:Column"/>
          <xs:element ref="en:Columns"/>
          <xs:element ref="en:Copy-of"/>
          <xs:element ref="en:DefineColor"/>
          <xs:element ref="en:DefineFontfamily"/>
          <xs:element ref="en:DefineFontalias"/>
          <xs:element ref="en:DefineTextformat"/>
          <xs:element ref="en:Element"/>
          <xs:element ref="en:Fontface"/>
          <xs:element ref="en:ForAll"/>
          <xs:element ref="en:Frame"/>
          <xs:element ref="en:Group"/>
          <xs:element ref="en:HSpace"/>
          <xs:element ref="en:Hyphenation"/>
          <xs:element ref="en:I"/>
          <xs:element ref="en:Image"/>
          <xs:element ref="en:Initial"/>
          <xs:element ref="en:Include"/>
          <xs:element ref="en:InsertPages"/>
          <xs:element ref="en:Layout"/>
          <xs:element ref="en:Li"/>
          <xs:element ref="en:LoadDataset"/>
          <xs:element ref="en:LoadFontfile"/>
          <xs:element ref="en:Loop"/>
          <xs:element ref="en:Message"/>
          <xs:element ref="en:NewPage"/>
          <xs:element ref="en:NextFrame"/>
          <xs:element ref="en:NextRow"/>
          <xs:element ref="en:Options"/>
          <xs:element ref="en:Output"/>
          <xs:element ref="en:Pageformat"/>
          <xs:element ref="en:Paragraph"/>
          <xs:element ref="en:PlaceObject"/>
          <xs:element ref="en:PositioningArea"/>
          <xs:element ref="en:PositioningFrame"/>
          <xs:element ref="en:ProcessNode"/>
          <xs:element ref="en:SaveDataset"/>
          <xs:element ref="en:SavePages"/>
          <xs:element ref="en:SetGrid"/>
          <xs:element ref="en:SetVariable"/>
          <xs:element ref="en:SortSequence"/>
          <xs:element ref="en:Sub"/>
          <xs:element ref="en:Sup"/>
          <xs:element ref="en:Switch"/>
          <xs:element ref="en:Table"/>
          <xs:element ref="en:Tablehead"/>
          <xs:element ref="en:Tablerule"/>
          <xs:element ref="en:Td"/>
          <xs:element ref="en:Tr"/>
          <xs:element ref="en:Trace"/>
          <xs:element ref="en:Until"/>
          <xs:element ref="en:Value"/>
          <xs:element ref="en:While"/>
        </xs:choice>
        <xs:group ref="en:foreign-nodes"/>
      </xs:choice>
      <xs:attribute name="test" use="required">
        <xs:annotation>
          <xs:documentation>Every time before the the loop is executed, this condition must evaluate to true. See the command Until for a loop with an exit test.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attributeGroup ref="en:foreign-nodes"/>
    </xs:complexType>
  </xs:element>
  <!-- This pattern allows any element from any namespace -->
  <xs:group name="anything">
    <xs:sequence>
      <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="anything">
    <xs:anyAttribute processContents="skip"/>
  </xs:attributeGroup>
  <xs:group name="foreign-elements">
    <xs:sequence>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="foreign-attributes">
    <xs:anyAttribute processContents="skip"/>
  </xs:attributeGroup>
  <xs:group name="foreign-nodes">
    <xs:sequence>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="en:foreign-elements"/>
    </xs:sequence>
  </xs:group>
  <xs:attributeGroup name="foreign-nodes">
    <xs:attributeGroup ref="en:foreign-attributes"/>
  </xs:attributeGroup>
</xs:schema>
