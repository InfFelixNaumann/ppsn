<UserControl x:Class="TecWare.PPSn.UI.PpsTagsEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:uiL="clr-namespace:TecWare.PPSn.UI"
			 xmlns:uiC="clr-namespace:TecWare.PPSn.Controls;assembly=PPSn.Desktop.UI"
			 
             xmlns:data="clr-namespace:TecWare.PPSn.Data;assembly=PPSn.Core"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
	<UserControl.Resources>
		<SolidColorBrush x:Key="lighterBorderBrush" Color="{StaticResource PPSnAccentColor}" Opacity="0.15" />

		<ControlTemplate x:Key="PpsOwnerIdentityImageTemplate" TargetType="{x:Type Control}">
			<Viewbox Grid.Column="0" Opacity=".75" VerticalAlignment="Center" HorizontalAlignment="Center">
				<Canvas Width="24" Height="24">
					<Path x:Name="imagePath" Data="{StaticResource accountPathGeometry}" Fill="{StaticResource PPSnActionButtonBrush}"/>
				</Canvas>
			</Viewbox>
			<ControlTemplate.Triggers>
				<DataTrigger Binding="{Binding Path=OwnerIdentityIcon, Mode=OneWay}">
					<DataTrigger.Value>
						<uiL:PpsTagOwnerIdentityIcon>Community</uiL:PpsTagOwnerIdentityIcon>
					</DataTrigger.Value>
					<Setter TargetName="imagePath" Property="Data" Value="{StaticResource accountMultiplePathGeometry}"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding Path=OwnerIdentityIcon, Mode=OneWay}">
					<DataTrigger.Value>
						<uiL:PpsTagOwnerIdentityIcon>System</uiL:PpsTagOwnerIdentityIcon>
					</DataTrigger.Value>
					<Setter TargetName="imagePath" Property="Data" Value="{StaticResource settingsPathGeometry}"/>
				</DataTrigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<Style x:Key="PpsTagTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource PPSnTextBoxStyle}">
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="Height" Value="Auto"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="20"/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<Control Grid.Column="0" Template="{StaticResource PpsOwnerIdentityImageTemplate}" Focusable="False" Margin="2,0,0,0"/>
								<ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" Focusable="false"
											  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsEnabled" Value="True"/>
									<Condition Property="IsReadOnly" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="MinWidth" Value="100"/>
								<Setter Property="BorderBrush" Value="{StaticResource lighterBorderBrush}"/>
								<Setter Property="Background" Value="{StaticResource PPSnControlBackgroundBrush}"/>
							</MultiTrigger>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
							</Trigger>
							<DataTrigger Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type uiC:PpsEditableListboxItem}}, Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Boolean>false</sys:Boolean>
								</DataTrigger.Value>
								<Setter Property="IsReadOnly" Value="True"/>
							</DataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="PpsTagSimpleTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource PpsTagTextBoxStyle}">
			<Setter Property="BorderBrush" Value="{StaticResource lighterBorderBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsEnabled" Value="True"/>
									<Condition Property="IsReadOnly" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" Value="{StaticResource PPSnControlBackgroundBrush}"/>
							</MultiTrigger>
							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
							</Trigger>

							<DataTrigger Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type uiC:PpsEditableListboxItem}}, Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Boolean>false</sys:Boolean>
								</DataTrigger.Value>
								<Setter Property="IsReadOnly" Value="True"/>
							</DataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="PpsTagItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid>
							<ContentPresenter />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsKeyboardFocusWithin" Value="True">
					<Setter Property="IsSelected" Value="True"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<ControlTemplate x:Key="NoteEditorTemplate" TargetType="{x:Type ContentControl}">
			<ListBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, 
				                   Path=TagsSource}"
					 Style="{StaticResource PPSnListBoxStyle}"
					 ItemContainerStyle="{StaticResource PpsTagItemStyle}"
					 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					 IsSynchronizedWithCurrentItem="True"
					 Margin="16,16,0,16" Focusable="False">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Grid Background="Transparent" Margin="0,0,0,6">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="60"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="24"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<StackPanel Orientation="Horizontal">
								<Control Template="{StaticResource PpsOwnerIdentityImageTemplate}" Focusable="False" Margin="4,3"/>
								<TextBlock Text="{Binding UserName}" VerticalAlignment="Center" FontStyle="Italic"
										   Foreground="{StaticResource PPSnWindowForegroundBrush}" Opacity=".75"/>
							</StackPanel>
							<TextBox x:Name="valueTextBox" Grid.Row="1"
									 Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
									 IsEnabled="{Binding IsEditable}"
									 Style="{StaticResource PpsTagSimpleTextBoxStyle}"
									 GotFocus="valueTextBox_GotFocus"
									 LostFocus="valueTextBox_LostFocus"									 
									 AcceptsReturn="True"
									 VerticalContentAlignment="Top" Padding="2,5" MaxHeight="268"/>
							<Grid Grid.Column="1" Grid.Row="1" Margin="6,0,0,0">
								<Grid.RowDefinitions>
									<RowDefinition Height="auto"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<!--<Button x:Name="saveButton" MinWidth="32"
										HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,6"
										Command="{x:Static uiL:PpsTagsEditor.UpdateTagCommand}" CommandParameter="{Binding}"
										Style="{StaticResource PPSnCircleButtonStyle}"
										Tag="{StaticResource savePathGeometry}"
										Visibility="Collapsed"/>
								<Button x:Name="removeButton" Grid.Row="1" MinWidth="32"
										HorizontalAlignment="Left" VerticalAlignment="Top" 
										Command="{x:Static uiL:PpsTagsEditor.RemoveTagCommand}" CommandParameter="{Binding}"
										Style="{StaticResource PPSnCircleButtonStyle}"
										Tag="{StaticResource deletePathGeometry}"
										Visibility="Hidden"/>
								<Button x:Name="appendButton" Grid.Row="1" MinWidth="32"
										HorizontalAlignment="Left" VerticalAlignment="Top" 
										Command="{x:Static uiL:PpsTagsEditor.AppendTagCommand}" CommandParameter="{Binding}"
										Style="{StaticResource PPSnCircleButtonStyle}"
										Tag="{StaticResource plusPathGeometry}"
										Visibility="Hidden"/>-->
							</Grid>
						</Grid>
						<!--<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Path=CreateNewBool, Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Boolean>true</sys:Boolean>
								</DataTrigger.Value>
								<Setter TargetName="appendButton" Property="Visibility" Value="Visible"/>
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
									<Condition Binding="{Binding Path=CanDelete, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
								</MultiDataTrigger.Conditions>
								<Setter TargetName="removeButton" Property="Visibility" Value="Visible"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
									<Condition Binding="{Binding Path=CanSave, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
								</MultiDataTrigger.Conditions>
								<Setter TargetName="saveButton" Property="Visibility" Value="Visible"/>
							</MultiDataTrigger>
						</DataTemplate.Triggers>-->
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</ControlTemplate>

		<!--<ControlTemplate x:Key="AttributeEditorTemplate" TargetType="{x:Type ContentControl}">
			<ListBox ItemsSource="{Binding Path=TagsSource, RelativeSource={RelativeSource AncestorType=UserControl}}"
					 Style="{StaticResource PPSnListBoxStyle}"
					 ItemContainerStyle="{StaticResource PpsTagItemStyle}"
					 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					 KeyboardNavigation.TabNavigation="Cycle"
					 Margin="16,16,0,16" Focusable="False">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Grid Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="176"/>
								<ColumnDefinition/>
								<ColumnDefinition Width="54"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="38" MaxHeight="38"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<TextBox x:Name="nameTextBox" Grid.Column="0" Margin="0,5"
									 Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									 IsEnabled="{Binding CreateNewBool}"
									 Style="{StaticResource PpsTagTextBoxStyle}"/>
							<TextBox Grid.Column="1" Grid.RowSpan="2" Margin="6,5"
									 Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									 IsEnabled="{Binding IsUserChangeable}"
									 Style="{StaticResource PpsTagSimpleTextBoxStyle}"
									 AcceptsReturn="True" VerticalContentAlignment="Top" Padding="2,5" MaxHeight="172"/>
							<Button x:Name="removeButton" Grid.Column="2" MinWidth="32"
									HorizontalAlignment="Left" VerticalAlignment="Center"
									Command="{x:Static uiL:PpsTagsEditor.RemoveTagCommand}" CommandParameter="{Binding}"
									Style="{StaticResource PPSnCircleButtonStyle}"
									Tag="{StaticResource deletePathGeometry}"
									Visibility="Hidden"/>
							<Button x:Name="appendButton" Grid.Column="2" MinWidth="32"
									HorizontalAlignment="Left" VerticalAlignment="Center"
									Command="{x:Static uiL:PpsTagsEditor.AppendTagCommand}" CommandParameter="{Binding}" 
									Style="{StaticResource PPSnCircleButtonStyle}"
									Tag="{StaticResource plusPathGeometry}"
									Visibility="Hidden"/>
						</Grid>
						<DataTemplate.Triggers>
							<Trigger SourceName="nameTextBox" Property="IsEnabled" Value="True">
								<Setter TargetName="nameTextBox" Property="BorderBrush" Value="{StaticResource lighterBorderBrush}" />
							</Trigger>
							<DataTrigger Binding="{Binding Path=CreateNewBool, Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Boolean>true</sys:Boolean>
								</DataTrigger.Value>
								<Setter TargetName="appendButton" Property="Visibility" Value="Visible"/>
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
									<Condition Binding="{Binding Path=CanDelete, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
								</MultiDataTrigger.Conditions>
								<Setter TargetName="removeButton" Property="Visibility" Value="Visible"/>
							</MultiDataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</ControlTemplate>-->

		<ControlTemplate x:Key="AttributeEditorTemplate" TargetType="{x:Type ContentControl}">
			<uiC:PpsEditableListbox ItemsSource="{Binding Path=TagsSource, RelativeSource={RelativeSource AncestorType=UserControl}}"
									Margin="16,16,0,16" AddNewItemFactory="tagAttributes_AddNewItemFactory">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Grid Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="176"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="38" MaxHeight="38"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<TextBox x:Name="nameTextBox" Grid.Column="0" Margin="0,5"
									 Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									 Style="{StaticResource PpsTagTextBoxStyle}"/>
							<TextBox Grid.Column="1" Grid.RowSpan="2" Margin="6,5"
									 Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									 AcceptsReturn="True" VerticalContentAlignment="Top" Padding="2,5" MaxHeight="172"
									 Style="{StaticResource PpsTagSimpleTextBoxStyle}"/>
						</Grid>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding}" Value="{x:Static CollectionView.NewItemPlaceholder}">
								<Setter TargetName="nameTextBox" Property="Background" Value="Yellow"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</uiC:PpsEditableListbox>
		</ControlTemplate>


		<ControlTemplate x:Key="TagEditorTemplate">
			<ListBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=UserControl},
				                   Path=TagsSource}"
					 Style="{StaticResource PPSnListBoxStyle}"
					 ItemContainerStyle="{StaticResource PpsTagItemStyle}"
					 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					 Margin="16,16,0,16" Focusable="False">
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Grid Background="Transparent" Height="38">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto"/>
								<ColumnDefinition Width="54"/>
							</Grid.ColumnDefinitions>
							<TextBox x:Name="tagTextBox" Grid.Column="0"
									 Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									 MaxLength="64"
									 IsEnabled="{Binding CreateNewBool}"
									 Style="{StaticResource PpsTagTextBoxStyle}"
									 FontSize="14" Margin="0,5">
								<TextBox.InputBindings>
									<KeyBinding Key="Return" Command="{x:Static uiL:PpsTagsEditor.AppendTagCommand}" CommandParameter="{Binding}"/>
								</TextBox.InputBindings>
							</TextBox>
							<Button x:Name="removeButton" Grid.Column="1" MinWidth="32" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
									Command="{x:Static uiL:PpsTagsEditor.RemoveTagCommand}" CommandParameter="{Binding}"
									Style="{StaticResource PPSnCircleButtonStyle}"
									Tag="{StaticResource deletePathGeometry}"
									Visibility="Hidden"/>
							<Button x:Name="appendButton" Grid.Column="1" MinWidth="32" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
									Command="{x:Static uiL:PpsTagsEditor.AppendTagCommand}" CommandParameter="{Binding}" 
									Style="{StaticResource PPSnCircleButtonStyle}"
									Tag="{StaticResource plusPathGeometry}"
									Visibility="Hidden"/>
						</Grid>
						<DataTemplate.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
									<Condition Binding="{Binding Path=CanDelete, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
								</MultiDataTrigger.Conditions>
								<Setter TargetName="removeButton" Property="Visibility" Value="Visible"/>
								<Setter TargetName="tagTextBox" Property="BorderBrush" Value="{StaticResource lighterBorderBrush}"/>
							</MultiDataTrigger>
							<DataTrigger Binding="{Binding Path=CreateNewBool, Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Boolean>true</sys:Boolean>
								</DataTrigger.Value>
								<Setter TargetName="appendButton" Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</ControlTemplate>

		<ControlTemplate x:Key="TaskEditorTemplate" TargetType="{x:Type ContentControl}">
			<ListBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=UserControl},
				                   Path=TagsSource}"
					 Style="{StaticResource PPSnListBoxStyle}"
					 ItemContainerStyle="{StaticResource PpsTagItemStyle}"
					 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
					 Margin="16,16,0,16" Focusable="False">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Grid Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="100"/>
								<ColumnDefinition/>
								<ColumnDefinition Width="54"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="38" MaxHeight="38"/>
								<RowDefinition/>
							</Grid.RowDefinitions>
							<TextBox x:Name="valueTextBox" Grid.Column="0" Margin="0,5"
									 Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									 IsEnabled="{Binding CreateNewBool}"
									 Style="{StaticResource PpsTagTextBoxStyle}"/>
							<TextBox Grid.Column="1" Grid.RowSpan="2" Margin="6,5"
									 Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									 IsEnabled="{Binding IsUserChangeable}"
									 Style="{StaticResource PpsTagSimpleTextBoxStyle}"
									 AcceptsReturn="True" VerticalContentAlignment="Top" Padding="2,5" MaxHeight="172"/>
							<Button x:Name="removeButton" Grid.Column="2" MinWidth="32"
									HorizontalAlignment="Left" VerticalAlignment="Center"
									Command="{x:Static uiL:PpsTagsEditor.RemoveTagCommand}" CommandParameter="{Binding}"
									Style="{StaticResource PPSnCircleButtonStyle}"
									Tag="{StaticResource deletePathGeometry}"
									Visibility="Hidden"/>
							<Button x:Name="appendButton" Grid.Column="2" MinWidth="32"
									HorizontalAlignment="Left" VerticalAlignment="Center"
									Command="{x:Static uiL:PpsTagsEditor.AppendTagCommand}" CommandParameter="{Binding}" 
									Style="{StaticResource PPSnCircleButtonStyle}"
									Tag="{StaticResource plusPathGeometry}"
									Visibility="Hidden"/>
						</Grid>
						<DataTemplate.Triggers>
							<Trigger SourceName="valueTextBox" Property="IsEnabled" Value="True">
								<Setter TargetName="valueTextBox" Property="BorderBrush" Value="{StaticResource lighterBorderBrush}" />
							</Trigger>
							<DataTrigger Binding="{Binding Path=CreateNewBool, Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Boolean>true</sys:Boolean>
								</DataTrigger.Value>
								<Setter TargetName="appendButton" Property="Visibility" Value="Visible"/>
							</DataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
									<Condition Binding="{Binding Path=CanDelete, Mode=OneWay}">
										<Condition.Value>
											<sys:Boolean>true</sys:Boolean>
										</Condition.Value>
									</Condition>
								</MultiDataTrigger.Conditions>
								<Setter TargetName="removeButton" Property="Visibility" Value="Visible"/>
							</MultiDataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		</ControlTemplate>

	</UserControl.Resources>

	<ContentControl>
		<ContentControl.Style>
			<Style TargetType="{x:Type ContentControl}" >
				<Setter Property="Focusable" Value="False"/>
				<Style.Triggers>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, 
						                   Path=TagClass}" Value="{x:Static data:PpsObjectTagClass.Note}">
						<Setter Property="Template" Value="{StaticResource NoteEditorTemplate}"/>
					</DataTrigger>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, 
						                   Path=TagClass}" Value="{x:Static data:PpsObjectTagClass.Tag}">
						<Setter Property="Template" Value="{StaticResource TagEditorTemplate}"/>
					</DataTrigger>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, 
						                   Path=TagClass}" Value="{x:Static data:PpsObjectTagClass.Text}">
						<Setter Property="Template" Value="{StaticResource AttributeEditorTemplate}"/>
					</DataTrigger>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, 
						                   Path=TagClass}" Value="{x:Static data:PpsObjectTagClass.Date}">
						<Setter Property="Template" Value="{StaticResource TaskEditorTemplate}"/>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</ContentControl.Style>
	</ContentControl>



</UserControl>